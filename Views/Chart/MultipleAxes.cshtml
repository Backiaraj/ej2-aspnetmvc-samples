@using Syncfusion.EJ2;
@section ControlsSection{
<div class="control-section">
    <div style="text-align:center">

        @Html.EJS().Chart("container").Series(series =>
   {
       series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).XName("x").YName("y").DataSource(ViewBag.dataSource).Name("Germany").Add();
       series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Line).YAxisName("yAxis").XName("x")
       .Marker(mr=>mr.Visible(true).Width(10).Height(10).Border(br=>br.Color("#F8AB1D").Width(2))).YName("y1").DataSource(ViewBag.dataSource).Name("Japan").Add();

   }).PrimaryXAxis(px => px.ValueType(Syncfusion.EJ2.Charts.ValueType.Category).MajorGridLines(mg=>mg.Width(0))
.Interval(1).LabelIntersectAction(Syncfusion.EJ2.Charts.LabelIntersectAction.Rotate90).LineStyle(ls=>ls.Width(0))
       ).PrimaryYAxis(py => py.LabelFormat("{value}°F").Maximum(100).Minimum(0).Interval(20).LineStyle(ls=>ls.Width(0))
       ).Axes(ax =>
       {
           ax.OpposedPosition(true).RowIndex(0).Minimum(24).Maximum(36).Interval(2).Name("yAxis").LabelFormat("{value}°C").MajorTickLines(mt=>mt.Width(0)).MajorGridLines(mg=>mg.Width(0)).LineStyle(ls=>ls.Width(0)).LabelStyle(ls=>ls.Color("transparent")).Add();
       }
       ).Annotations(an =>
       {
           an.X("Sun").Y("35").CoordinateUnits(Syncfusion.EJ2.Charts.Units.Point).VerticalAlignment(Syncfusion.EJ2.Charts.Position.Top).Content(ViewBag.content1).Add();
           an.X("Sat").Y("34").YAxisName("yAxis").CoordinateUnits(Syncfusion.EJ2.Charts.Units.Point).VerticalAlignment(Syncfusion.EJ2.Charts.Position.Top).Content(ViewBag.content).Add();
       }
).Title("Weather Condition JPN vs DEU").ChartArea(area => area.Border(br=>br.Color("transparent"))).Tooltip(tt => tt.Enable(true)).LegendSettings(lg=>lg.Visible(false)).Load("load").Render()
    </div>
</div>
 @*custom code start*@
<style>
    #control-container {
        padding: 0px !important;
    }
</style>
 @*custom code end*@
<div id='chart_cloud' style="display:none">
    <img src="@Url.Content("~/Content/chart/cloud.png")" style='width: 41px; height: 41px' />
</div>
<div id='chart_sunny' style="display:none">
    <img src="@Url.Content("~/Content/chart/sunny.png")" style='width: 41px; height: 41px' />
</div>
 @*custom code start*@
    <script>
        var load = function (args) {
            var selectedTheme = themeName ? themeName : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast');
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "60%";

        }
    </script>
     @*custom code end*@
}
 @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Multiple Axis in ASP.NET MVC Chart control. Explore here for more details."/>
                }
 @*custom code end*@
@section ActionDescription{
    <p>
        This sample illustrates multiple axes in chart to represent the temperature in Celsius in an axis and Fahrenheit in another axis.
    </p>
}
@section Description{
        <p>
        In this example, you can see how to render and configure multipe axes. Use axes collection to render secondary axis to the chart and bind it to the specific series.
        You can also customize the axis line and its labels similar to primary axis.
        </p>
        <p> 
        Tooltip is enabled in this example. To see the tooltip in action, hover a point or tap on a point in touch enabled devices.
        </p>
         <p>
            More information on the multiple axis can be found in this
            <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-axis.html">documentation section</a>.
        </p> 
}
@section Title{
                    <title>ASP.NET MVC Chart Multiple Axis Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Multiple Axis in ASP.NET MVC Chart Control</h1>
                }