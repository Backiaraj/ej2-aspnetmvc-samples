@using Syncfusion.EJ2;
@section ControlsSection{
    <script src="~/Scripts/financial-data.js"></script>
    <div class="control-section">
        <div style="text-align:center">
            @Html.EJS().Chart("container").PrimaryXAxis(px => px.Title("Years").MajorGridLines(mg=>mg.Width(0)).
       ValueType(Syncfusion.EJ2.Charts.ValueType.DateTime).Skeleton("yMMM")).Series(series =>
       {
           series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Area).Border(br=>br.Width(0.5).Color("#00bdae"))
           .Animation(animation=>animation.Enable(false)).DataSource("series1").Name("Product X").XName("x")
           .YName("y").Fill("url(#gradient-chart)").Add();
       }
       ).ChartArea(area => area.Border(br=>br.Color("transparent"))
       ).LegendSettings(legend => legend.Visible(false)
       ).PrimaryYAxis(py => py.Title("Profit ($)")
       .LineStyle(ls=>ls.Width(0)).MajorTickLines(mt=>mt.Width(0))
       .RangePadding(Syncfusion.EJ2.Charts.ChartRangePadding.None)
       ).ZoomSettings(z => z.EnableMouseWheelZooming(true).EnablePinchZooming(true)
       .EnableSelectionZooming(true).Mode(Syncfusion.EJ2.Charts.ZoomMode.X)
       .EnableScrollbar(true)).Title("Sales History of Product X").Load("load").Render()
        </div>
    </div>


    <style>
        #material-gradient-chart stop {
            stop-color: #00bdae;
        }

        #fabric-gradient-chart stop {
            stop-color: #4472c4;
        }

        #bootstrap-gradient-chart stop {
            stop-color: #a16ee5;
        }

        #bootstrap4-gradient-chart stop {
            stop-color: #a16ee5;
        }

        #highcontrast-gradient-chart stop {
            stop-color: #79ECE4;
        }

        #tailwind-gradient-chart stop {
            stop-color: #5A61F6;
        }

        #bootstrap5-gradient-chart stop {
            stop-color: #262E0B;
        }

        #material-dark-gradient-chart stop {
            stop-color: #9ECB08;
        }

        #fabric-dark-gradient-chart stop {
            stop-color: #4472c4;
        }

        #bootstrap-dark-gradient-chart stop {
            stop-color: #a16ee5;
        }

        #tailwind-dark-gradient-chart stop {
            stop-color: #8B5CF6;
        }

        #fluent-gradient-chart stop {
            stop-color: #614570;
        }

        #fluent-dark-gradient-chart stop {
            stop-color: #8AB113;
        }

        #bootstrap5-dark-gradient-chart stop {
            stop-color: #5ECB9B;
        }

        .chart-gradient stop[offset="0"] {
            stop-opacity: 0.75;
        }

        .chart-gradient stop[offset="1"] {
            stop-opacity: 0;
        }

        #control-container {
            padding: 0px !important;
        }
</style>
<svg style="height: 0">
    <defs>
        <linearGradient id="material-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="fabric-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="bootstrap-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="bootstrap4-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="highcontrast-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="tailwind-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="bootstrap5-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="material-dark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="fabric-dark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="bootstrap-dark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="tailwind-dark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="bootstrap5-dark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="fluent-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
        <linearGradient id="fluent-dark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
            <stop offset="0"></stop>
            <stop offset="1"></stop>
        </linearGradient>
    </defs>
</svg>
    <script>
        var series1 = [];
        var point1;
        var value = 80;
        var i;
        for (i = 1; i < 500; i++) {
            if (Math.random() > 0.5) {
                value += Math.random();
            }
            else {
                value -= Math.random();
            }
            point1 = { x: new Date(1950, i + 2, i), y: value.toFixed(1) };
            series1.push(point1);
        }
         @*custom code start*@
        var load = function (args) {
            var themes = ['bootstrap5', 'bootstrap5dark', 'tailwind', 'tailwinddark', 'material', 'materialdark', 'bootstrap4', 'bootstrap', 'bootstrapdark', 'fabric', 'fabricdark', 'highcontrast', 'fluent', 'fluentdark'];
            var borderColor = ['#262E0B', '#5ECB9B', '#5A61F6', '#8B5CF6', '#00bdae', '#9ECB08', '#a16ee5', '#a16ee5', '#a16ee5', '#4472c4', '#4472c4', '#79ECE4', '#614570', '#8AB113'];
            var selectedTheme = themeName ? themeName : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast');
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "80%";
            args.chart.series[0].fill = 'url(#' + selectedTheme + '-gradient-chart)';
            args.chart.series[0].border = { width: 0.5, color: borderColor[themes.indexOf(args.chart.theme.toLowerCase())] }
        };
        @*custom code end*@
    </script>
}
 @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Zooming in ASP.NET MVC Chart control. Explore here for more details."/>
                }
 @*custom code end*@

@section ActionDescription{
    <p>
    This sample illustrates zooming feature in chart. The change can be zoomed by pinching or by mouse wheel.
</p>
}
@section Description{
    <p>This sample demonstrates the zooming and panning behavior in chart.</p>
<ul>
    <li>Click and drag the mouse on a chart area to enable selection zooming.</li>
    <li>Hover the mouse on the toolbar at the top right corner of chart area to switch between zooming and panning.</li>
    <li>Pinch in and pinch out the chart area to zoom in or zoom out the chart in touch enabled devices.</li>
    <li>Touch and drag to pan the chart.</li>
    <li>Double tap to reset the zoomed chart.</li>
</ul>
<p>Chart component supports four types of zooming which can be set using <code>enableSelectionZooming</code>, <code>enablePinchZooming</code>, <code>enableMouseWheelZooming</code>, and <code>enableDeferredZooming</code> properties.
<p>
    Chart supports two mode of zooming which can be set using the <code>
        <a target="_blank" class="code"
           href="http://ej2.syncfusion.com/documentation/chart/api-zoomSettings.html#mode-zoommode">mode</a>
    </code> property.
</p>
<ul>
    <li><code>XY</code> - Zoom the chart with respect to both the axes.</li>
    <li><code>X</code> - Zoom the chart with respect to horizontal axis.</li>
    <li><code>Y</code> - Zoom the chart with respect to vertical axis.</li>
</ul>
<br>
<p>
    More information on the Zooming can be found in this
    <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-zoomSettings.html#properties">documentation section</a>.
</p> 
}
@section Title{
                    <title>ASP.NET MVC Chart Zooming Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Zooming in ASP.NET MVC Chart Control</h1>
                }