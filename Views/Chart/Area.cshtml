@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section">
        <div style="text-align:center">
@(Html.EJS().Chart("container")            
            .Series(sr =>
            {
                sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Area)
                   .Name("Product A")
                   .XName("xValue")
                   .YName("yValue")
                   .Width(2)
                   .Border(br => br.Width(2))
                   .DataSource(ViewBag.dataSource)
                   .Opacity(0.5).Add();
                sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Area)
                   .Name("Product B")
                   .XName("xValue")
                   .YName("yValue1")
                   .Width(2)
                   .Border(br => br.Width(2))
                   .DataSource(ViewBag.dataSource)
                   .Opacity(0.5).Add();
            })
              .PrimaryXAxis(xaxis =>
                 xaxis.MajorGridLines(mg=>mg.Width(0))
                      .ValueType(Syncfusion.EJ2.Charts.ValueType.DateTime)
                     .LabelFormat("y")
                     .IntervalType(Syncfusion.EJ2.Charts.IntervalType.Years)
                     .EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift)
              )
              .PrimaryYAxis(yaxis =>
                  yaxis.LabelFormat("{value}M")
                        .MajorTickLines(mt=>mt.Width(0))
                        .LineStyle(ls=>ls.Width(0))
                        .Title("Revenue in Millions")
              )
          .Title("Average Sales Comparison")
          .Load("load").ChartArea(area => area.Border(br=>br.Color("transparent"))).Render()
          )
            
        </div>
    </div>
@*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
    <script>
        var load = function (args) {
            var selectedTheme = themeName ? themeName : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast');
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "60%";
        }
    </script>
    @*custom code end*@
}
@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Area in ASP.NET MVC Chart control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <p>
        This sample visualizes the data about average sales comparison of two products by using default area series in the chart. 
        Legend in the sample shows the information about the series.
    </p>
}
@section Description{
   <p>
        In this example, you can see how to render and configure the area type charts. This is similar to line type series, but the area get closed and filled with series color.
        You can use the <code>border</code> and <code>fill</code> properties to customize the area. <code>marker</code> and <code>dataLabel</code> are used to represent individual data and its value.
        Legend is enabled in this example with series type shape.
     </p>     
      <br>
        <p>
            More information on the area series can be found in this
            <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype">documentation section</a>.
        </p> 
}
@section Title{
                    <title>ASP.NET MVC Chart Area Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Area in ASP.NET MVC Chart Control</h1>
                }