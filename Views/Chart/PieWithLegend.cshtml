@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section" align="center">
        
        @(Html.EJS().AccumulationChart("container")
            .Series(sr =>
            {
                sr.Radius("80%")
                    .XName("x")
                    .YName("y")
                    .DataLabel(dl => dl.Visible(true).Name("y").Position(Syncfusion.EJ2.Charts.AccumulationLabelPosition.Inside).Font(ft => ft.FontWeight("600").Color("#ffffff")).ConnectorStyle(cs => cs.Length("20px").Type(Syncfusion.EJ2.Charts.ConnectorType.Curve)))
                    .StartAngle(30)
                    .Explode(false)
                    .ExplodeOffset("10%")
                    .ExplodeIndex(0)
                    .InnerRadius("43%")
                    .Name("text")
                    .DataSource(ViewBag.dataSource).Add();
            })
            
            .EnableSmartLabels(true).EnableAnimation(false).EnableBorderOnMouseMove(false).Tooltip(tp => tp.Enable(true).Format("<b>${point.x}</b><br>Browser Share: <b>${point.y}%</b>").Header(""))
            .LegendSettings(leg => leg.Visible(true)
                .ToggleVisibility(false)
                .MaximumLabelWidth(66)
                .TextWrap(Syncfusion.EJ2.Charts.TextWrap.Wrap))
            .Annotations(an => { an.Region(Syncfusion.EJ2.Charts.Regions.Series).X("52%").Y("50%").Add(); })
            .Load("load").TextRender("textRender").SelectionMode(Syncfusion.EJ2.Charts.AccumulationSelectionMode.Point)
            .Render()
            )
    </div>
   
    <script>
         @*custom code start*@
        var load = function(args) {
            var selectedTheme = themeName ? themeName : 'Material';
            args.accumulation.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast');
            args.accumulation.title = ej.base.Browser.isDevice ?  "Browser Market Share" : '';
            args.accumulation.legendSettings.position = ej.base.Browser.isDevice ? 'Bottom' : 'Right';
            args.accumulation.legendSettings.height = ej.base.Browser.isDevice ?  '20%' : '36%';
            args.accumulation.legendSettings.width = ej.base.Browser.isDevice ? '80%' :'20%';
            args.accumulation.annotations[0].properties.content = ej.base.Browser.isDevice ? " " : "<div style='font-Weight:600;font-size:14px'>Browser<br>Market<br>Share</div>";
        }
        @*custom code end*@
        var count = 0;
       
        function getFontSize(width) {
            if (width > 300) {
                return '13px';
            }
            else if (width > 250) {
                return '8px';
            }
            else {
                return '6px';
            }
        }
        var textRender = function (args) {
            args.text = args.point.y + ' %';
        };     
    </script>
}
@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Pie with Legend in ASP.NET MVC Chart control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <p>
        This sample illustrates an educational instituteâ€™s revenue by using the pie with legend series. The legend will be displayed at the right side of the chart.
    </p>
}
@section Description{
    In this example, you can see how to render and configure the pie chart. You can use <code>border</code> and <code>fill</code> properties to customize the pie point. <code>dataLabel</code> is used to represent individual data and its value.
    Here the legend text is wrapped using <code>textWrap</code> property.

}
@section Title{
                    <title>ASP.NET MVC Chart Pie with Legend Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Pie with Legend in ASP.NET MVC Chart Control</h1>
                }