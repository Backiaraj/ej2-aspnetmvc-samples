@using Syncfusion.EJ2;
@section ControlsSection{
   <div>
    <div class="col-lg-9 control-section">
        <div class="content-wrapper">
            <div id="container">
            @(Html.EJS().AccumulationChart("container")
                    .Series(sr =>
                    {
                        sr.Type(Syncfusion.EJ2.Charts.AccumulationType.Pie)
                               .XName("xValue")
                               .YName("yValue")
                               .Name("RIO")
                               .Explode(true)
                               .DataLabel(dl => dl.Visible(true).Name("text").Position(Syncfusion.EJ2.Charts.AccumulationLabelPosition.Outside).ConnectorStyle(cs=>cs.Type(Syncfusion.EJ2.Charts.ConnectorType.Line).Length("5%")).Font(ft => ft.Size("14px")))
                               .Animation(animate => animate.Enable(false))
                               .Radius("70%")
                               .StartAngle(0)
                               .EndAngle(360)
                               .InnerRadius("0%")
                               .GroupTo("9")
                               .GroupMode(Syncfusion.EJ2.Charts.GroupModes.Point)
                               .DataSource(ViewBag.dataSource).Add();
                    })
                    .EnableSmartLabels(true)
                     .Tooltip(tp => tp.Enable(false))
                     .LegendSettings(leg => leg.Visible(false))
                     .Load("load").PointRender("pointRender").TextRender("textRender")
                     .Title("RIO Olympics Gold").Render()
            )
   </div>
        </div>
    </div>
    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tbody>
                <tr>
                    <td style="width: 50%">
                        <div>
                            GroupModes:
                        </div>
                    </td>
                    <td style="width: 50%;">
                        <div>
                            @Html.EJS().DropDownList("groupmode").Index(0).DataSource(ViewBag.data).Value("Point").Change("changedata").Render()
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 30%">
                        <div>
                            Group To
                        </div>
                    </td>
                    <td style="width: 40%;">
                        <div data-role="rangeslider">
                            <input type="range" name="range-min" id="clubpoint" value="9" min="0" max="27" style="width:90%">
                        </div>
                    </td>
                    <td style="width: 30%">
                        <div>
                            <p id="clubvalue" style="font-weight: normal; padding-top: 15px">9</p>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>      
    
    <script>
        var pointRender = function(args) {
            if (args.point.isClubbed || args.point.isSliced) {
                args.fill = '#D3D3D3';
            }
        }
        var textRender = function(args) {
            args.text = args.point.x + ' ' + args.point.y;
        }
         @*custom code start*@
        var load = function(args) {
            var selectedTheme = themeName ? themeName : 'Material';
            args.accumulation.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast');
        }
         @*custom code end*@
        function clubchange(value) {
            var pie = document.getElementById("container").ej2_instances[0];
            pie.series[0].groupTo = value.toString();
            pie.series[0].animation.enable = false;
            document.getElementById('clubvalue').innerHTML = value.toString();
            pie.removeSvg();
            pie.refreshSeries();
            pie.refreshChart();
        }
        function changedata(args) {
            var currentValue = args.value === 'Point' ? 9 : 8;
            document.getElementById('clubpoint').value = currentValue.toString();
            var pie = document.getElementById('container').ej2_instances[0];
            pie.series[0].groupMode = args.value;
            clubchange(currentValue);

        }
        
        document.getElementById('clubpoint').onchange = function (e) {
        clubchange(+document.getElementById('clubpoint').value);
    };

    </script>
}
 @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Grouping in ASP.NET MVC Chart control. Explore here for more details."/>
                }
 @*custom code end*@
@section ActionDescription{
    <p>
        This sample illustrates the grouping functionality in pie series.  The grouping value can be changed by using the <code>Group To</code> property.
    </p>
}
@section Description{
    <p> In this example, you can see how to <code>group</code> points in pie chart.</p>
    <p> Points having value below the <code>'groupTo'</code> value are grouped and shown as separate point. You can view this points on mouse click and can customize this point using <code>'pointRender'</code> event. </p>
    <p> DataLabel is used to represent individual data and its value.</p>
}
@section Title{
                    <title>ASP.NET MVC Chart Grouping Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Grouping in ASP.NET MVC Chart Control</h1>
                }