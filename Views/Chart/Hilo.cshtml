@using Syncfusion.EJ2;
@section ControlsSection{
<script src="~/Scripts/financial-data.js"></script>
    <div class="control-section">
        <div style="text-align:center">


            @Html.EJS().Chart("container").Series(series =>
       {
           series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Hilo)
           .XName("x").High("high").Low("low").Close("close").Open("Open")
           .DataSource("returnValue").Name("Apple Inc").Add();
       }).PrimaryXAxis(px => px.ValueType(Syncfusion.EJ2.Charts.ValueType.DateTime)
       .MajorGridLines(mg=>mg.Width(0)).CrosshairTooltip(ct=>ct.Enable(true))
       ).PrimaryYAxis(py => py.Minimum(100).Maximum(180).Interval(20).Title("Price")
       .LabelFormat("${value}").MajorTickLines(mt=>mt.Width(0)).LineStyle(ls=>ls.Width(0))
       ).ChartArea(area => area.Border(br=>br.Color("transparent"))).Crosshair(cr => cr.Enable(true)
       .LineType(Syncfusion.EJ2.Charts.LineType.Vertical).Line(li=>li.Width(0.02))).Load("load"
       ).LegendSettings(lg => lg.Visible(false)).Tooltip(tt => tt.Enable(true).Shared(true)
       ).Title("AAPL Historical").Load("load").Render()

        </div>
    </div>

 @*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
 @*custom code end*@
    <script>
        var dataSource = window.chartData;
        var date1 = new Date('2017-01-01');
        var returnValue = dataSource.filter(filterValue);
        function filterValue(value) {
            return value.x >= date1;
        }
 @*custom code start*@
        var load = function (args) {
            var selectedTheme = themeName ? themeName : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast');
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "60%";

        };
 @*custom code end*@
    </script>
}
 @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Hilo in ASP.NET MVC Chart control. Explore here for more details."/>
                }
 @*custom code end*@
@section ActionDescription{
    <p>
        This sample visualizes the AAPL historical data with default HILO series in the chart. 
        Tooltip and crosshair shows the information about the data and period.
   </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the Hilo type series. You can use <code>border</code> and  
        <code>fill</code> properties to customize the area.
    </p>
    <p>
        Tooltip is enabled in this example. To see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>
    <p>
        More information on the Hilo series can be found in this
        <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype">documentation section</a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart Hilo Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Hilo in ASP.NET MVC Chart Control</h1>
                }