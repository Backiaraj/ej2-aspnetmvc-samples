@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section" style="text-align:center">
        @Html.EJS().Chart("container").Series(series =>
   {
       series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Line).
       Name("Male").
       XName("x").
       YName("y").
       Marker(mr=>mr.Visible(true).Shape(Syncfusion.EJ2.Charts.ChartShape.Circle).DataLabel(dl=>dl.Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Top).Margin(mar => mar.Right(30)).Template("#Male-Material"))).
       DataSource(ViewBag.dataSource1).
       Width(2).
       Add();

       series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Line).
       Name("Female").
       XName("x").
       YName("y").
       Marker(mr => mr.Visible(true).Shape(Syncfusion.EJ2.Charts.ChartShape.Rectangle).DataLabel(dl => dl.Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Bottom).Margin(mar => mar.Right(30)).Template("#Female-Material"))).
       DataSource(ViewBag.dataSource2).
      Width(2).Add();

   }).PrimaryXAxis(
       xAxis =>
       {
           xAxis.Minimum(2010).
        Maximum(2016).
       Interval(1).
        EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift).
        LabelStyle(ls=>ls.FontFamily("Roboto").FontStyle("medium").Size("14px")).
        LineStyle(ls=>ls.Color("#eaeaea").Width(1)).
        MajorGridLines(mg=>mg.Width(0));
       }).PrimaryYAxis(
       yAxis =>
       {
           yAxis.LabelFormat("{value}M").
            Minimum(900).
            Maximum(1300).
            LabelStyle(ls => ls.FontFamily("Roboto").FontStyle("medium").Size("14px")).
              LineStyle(ls => ls.Color("#eaeaea").Width(1)).
        MajorGridLines(mg => mg.Color("#eaeaea").Width(1));
       }).ChartArea(area => area.Border(br=>br.Color("transparent"))
       ).Title("Population of India Statistics").SubTitle("(2010 - 2016)").SubTitleStyle(st=>st.TextAlignment(Syncfusion.EJ2.Charts.Alignment.Far)).Load("load").TextRender("textRender").Render()
       
    </div>


    <style>
        #control-container {
            padding: 0px !important;
        }
        #templateWrap img {
        border-radius: 0px;
        width: 24px;
        padding: 4px;
        height: 24px;
    }
    
    #templateWrap .des {
        float: right;
        padding: 2px;
        line-height: 20px;
        text-align: center;
    }
    </style>
<script id="Male-Fabric" type="text/x-template">
    <div id='templateWrap' style="background-color:#4472c4;border-radius: 3px;">
        <img src="@Url.Content("~/Content/chart/male.png")" />
        <div class='des' style="color:white; font-family:Roboto; font-style: medium; fontp-size:14px; padding-right:6px">
            <span>${point.y}M </span>
        </div>
    </div>
</script>
<script id="Female-Fabric" type="text/x-template">
    <div id='templateWrap' style="background-color:#ed7d31;border-radius: 3px;">
        <img src="@Url.Content("~/Content/chart/female.png")" />
        <div class='des' style="color:white; font-family:Roboto; font-style: medium; fontp-size:14px;padding-right:6px">
            <span>${point.y}M </span>
        </div>
    </div>
</script>
<script id="Male-Material" type="text/x-template">
    <div id='templateWrap' style="background-color:#00bdae;border-radius: 3px;">
        <img src="@Url.Content("~/Content/chart/male.png")" />
        <div class='des' style="color:white; font-family:Roboto; font-style: medium; fontp-size:14px;padding-right:6px">
            <span>${point.y}M </span>
        </div>
    </div>
</script>
<script id="Female-Material" type="text/x-template">
    <div id='templateWrap' style="background-color:#404041;border-radius: 3px;">
        <img src="@Url.Content("~/Content/chart/female.png")" />
        <div class='des' style="color:white; font-family:Roboto; font-style: medium; fontp-size:14px;padding-right:6px">
            <span>${point.y}M </span>
        </div>
    </div>
</script>
<script id="Male-Bootstrap" type="text/x-template">
    <div id='templateWrap' style="background-color:#a16ee5;border-radius: 3px;">
        <img src="@Url.Content("~/Content/chart/male.png")" />
        <div class='des' style="color:white; font-family:Roboto; font-style: medium; fontp-size:14px;padding-right:6px">
            <span>${point.y}M </span>
        </div>
    </div>
</script>
<script id="Female-Bootstrap" type="text/x-template">
    <div id='templateWrap' style="background-color:#f7ce69;border-radius: 3px;">
        <img src="@Url.Content("~/Content/chart/female.png")" />
        <div class='des' style="color:white; font-family:Roboto; font-style: medium; fontp-size:14px;padding-right:6px">
            <span>${point.y}M </span>
        </div>
    </div>
</script>
<script id="Male-Bootstrap4" type="text/x-template">
        <div id='templateWrap' style="background-color:#a16ee5;border-radius: 3px;">
            <img src="@Url.Content("~/Content/chart/male.png")" />
            <div class='des' style="color:white; font-family:Roboto; font-style: medium; fontp-size:14px;padding-right:6px">
                <span>${point.y}M </span>
            </div>
        </div>
    </script>
<script id="Female-Bootstrap4" type="text/x-template">
        <div id='templateWrap' style="background-color:#f7ce69;border-radius: 3px;">
            <img src="@Url.Content("~/Content/chart/female.png")" />
            <div class='des' style="color:white; font-family:Roboto; font-style: medium; fontp-size:14px;padding-right:6px">
                <span>${point.y}M </span>
            </div>
        </div>
</script>

<script id="Male-Highcontrast" type="text/x-template">
    <div id='templateWrap' style="background-color:#79ECE4;border-radius: 3px;">
        <img src="@Url.Content("~/Content/chart/male.png")" />
        <div class='des' style="color:white; font-family:Roboto; font-style: medium; fontp-size:14px;padding-right:6px">
            <span>${point.y}M </span>
        </div>
    </div>
</script>
<script id="Female-Highcontrast" type="text/x-template">
    <div id='templateWrap' style="background-color:#E98272;border-radius: 3px;">
        <img src="@Url.Content("~/Content/chart/female.png")" />
        <div class='des' style="color:white; font-family:Roboto; font-style: medium; fontp-size:14px;padding-right:6px">
            <span>${point.y}M </span>
        </div>
    </div>
</script>

<script id="Male-Tailwind" type="text/x-template">
    <div id='templateWrap' style="background-color:#5A61F6;border-radius: 3px;">
        <img src="@Url.Content("~/Content/chart/male.png")" />
        <div class='des' style="color:white; font-family:Roboto; font-style: medium; fontp-size:14px;padding-right:6px">
            <span>${point.y}M </span>
        </div>
    </div>
</script>
<script id="Female-Tailwind" type="text/x-template">
    <div id='templateWrap' style="background-color:#65A30D;border-radius: 3px;">
        <img src="@Url.Content("~/Content/chart/female.png")" />
        <div class='des' style="color:white; font-family:Roboto; font-style: medium; fontp-size:14px;padding-right:6px">
            <span>${point.y}M </span>
        </div>
    </div>
</script>
    <script>
        var theme;
        var textRender = function (args) {
            args.template = '#' + args.series.name + '-' + theme;
        };
        @* custom code start *@
        var load = function (args) {
            var selectedTheme = themeName ? themeName : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark");
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "60%";
            theme = args.chart.theme
        };
        @* custom code end *@
    </script>
}
 @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the DataLabel Template in ASP.NET MVC Chart control. Explore here for more details."/>
                }
 @*custom code end*@
@section ActionDescription{
    <p>
        This sample illustrates datalabel template support in the chart. In this sample, images are placed as datalabel by means of templates.
    </p>
}
@section Description{
    <p>
        Label content can be formatted by using the template option in dataLabel. Inside the template, you can add the placeholder
        text ${point.y}M to display corresponding data points value.
    </p>
    <br>
    <p>
        More information on the Crosshair can be found in this &nbsp;
        <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-dataLabelSettingsModel.html">documentation section</a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart DataLabel Template Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of DataLabel Template in ASP.NET MVC Chart Control</h1>
                }