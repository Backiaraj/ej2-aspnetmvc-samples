@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section">
        <div style="text-align:center">

            @Html.EJS().Chart("container-vertical").Series(series =>
       {
           series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.StackingArea).XName("x").YName("y").DataSource(ViewBag.dataSource).Name("Organic").Add();
           series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.StackingArea).XName("x").YName("y").DataSource(ViewBag.dataSource1).Name("Fair-trade").Add();
           series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.StackingArea).XName("x").YName("y").DataSource(ViewBag.dataSource2).Name("Veg Alternatives").Add();
           series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.StackingArea).XName("x").YName("y").DataSource(ViewBag.dataSource3).Name("Others").Add();

       }).PrimaryXAxis(px => px.EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift)
       .MajorGridLines(mg=>mg.Width(0))
       .MajorTickLines(mt=>mt.Width(0)).LineStyle(ls=>ls.Width(0))
.ValueType(Syncfusion.EJ2.Charts.ValueType.DateTime).IntervalType(Syncfusion.EJ2.Charts.IntervalType.Years).LabelFormat("y")
       ).PrimaryYAxis(py => py.LabelFormat("{value}B")
       .MajorTickLines(mt=>mt.Width(0)).LineStyle(ls=>ls.Width(0)).Title("Spends")
       .Interval(1).Minimum(0).Maximum(7)
       ).Title("Trend in Sales of Ethical Produce"
       ).ChartArea(area => area.Border(br=>br.Color("transparent"))).Load("load").Render()

 
        </div>
        <div style="float: right; margin-right: 10px;">
            Source:
            <a href="https://www.gov.uk/" target="_blank">www.gov.uk</a>
        </div>
    </div>
   @*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
    <script>
        var load = function (args) {
            var selectedTheme = themeName ? themeName : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast');
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "60%";
        }
    </script>
       @*custom code end*@
}
   @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Stacked Area in ASP.NET MVC Chart control. Explore here for more details."/>
                }
   @*custom code end*@
@section ActionDescription{
    <p>
    Trend in the sales of ethical product is visualized with default stacked area series in chart.
    Legend in the sample shows the information about the series.
</p>
}
@section Description{
   <p>
    In this example, you can see how to render and configure the stacking area type charts. Stacks the series on top of another series to avoid the overlapping of series with one another, when rendering more than one area series in same chart.
    You can use <code>fill</code> property to customize the stacked area. <code>dataLabel</code> is used to represent individual data and its value.
</p>
<br>
<p>
    More information on the stacking area series can be found in this
    <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype">documentation section</a>.
</p>  
}
@section Title{
                    <title>ASP.NET MVC Chart Stacked Area Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Stacked Area in ASP.NET MVC Chart Control</h1>
                }