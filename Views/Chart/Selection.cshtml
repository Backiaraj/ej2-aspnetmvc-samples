@using Syncfusion.EJ2;
@section ControlsSection{
    <script src="~/Scripts/theme-color.js"></script>
    <div class="col-lg-9 control-section">
            @(Html.EJS().Chart("container").Series(series =>
        {
            series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).XName("xValue").YName("yValue").DataSource(ViewBag.dataSource).Name("Age 0-14").Add();
            series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).XName("xValue").YName("yValue1").DataSource(ViewBag.dataSource).Name("Age 15-64").Add();
            series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).XName("xValue").YName("yValue2").DataSource(ViewBag.dataSource).Name("Age 65 & Above").Add();

        }).PrimaryXAxis(px => px.Title("Countries").Interval(1).LabelIntersectAction(Syncfusion.EJ2.Charts.LabelIntersectAction.Rotate90).EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift)
        .ValueType(Syncfusion.EJ2.Charts.ValueType.Category)).PrimaryYAxis(py => py.LabelFormat("{value}%").Title("Distribution").Interval(20))
        .LegendSettings(legend => legend.Visible(true).ToggleVisibility(false))
        .Title("Age Distribution by Country").Load("load").SelectionMode(Syncfusion.EJ2.Charts.SelectionMode.Point).Render()
    )
    </div>
    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tr id='' style="height: 50px">
                <td style="width: 80%">
                    <div> Enable Multi-selection:</div>
                </td>
                <td>
                    <input type="checkbox" id="select" style="margin-top: 15px">
                </td>
            </tr>
            <tr style="height: 50px">
                <td style="width: 60%">
                    <div>Selection Mode:</div>
                </td>
                <td style="width: 40%;">
                    <select name="selectIndex" autocomplete="off" id="selmode" style="margin-left: -25px">
                        <option value="Point">Point</option>
                        <option value="Series">Series</option>
                        <option value="Cluster">Cluster</option>
                    </select>
                </td>
            </tr>
            <tr style="height: 50px">
                <td style="width: 60%">
                    <div>Selection Patterns:</div>
                </td>
                <td style="width: 40%;">
                    <select name="selectIndex" autocomplete="off" id="selpattern" style="margin-left: -25px; display: none;">
                        <option value="None" selected>None</option>
                        <option value="DiagonalForward">DiagonalForward</option>
                        <option value="Chessboard">Chessboard</option>
                        <option value="Triangle">Triangle</option>
                        <option value="Box">Box</option>
                        <option value="HorizontalDash">HorizontalDash</option>
                    </select>
                </td>
            </tr>
            <tr style="height: 50px">
                <td style="width: 50%">
                    <div> Enable Highlight:</div>
                </td>
                <td>
                    <input type="checkbox" id="highlight" style="margin-top: 15px">
                </td>
            </tr>
            <tr style="height: 50px">
                <td style="width: 60%">
                    <div>Highlight Color:</div>
                </td>
                <td style="width: 40%;">
                    <input id="color-picker" type="color">
                </td>
            </tr>
            <tr style="height: 50px">
                <td style="width: 60%">
                    <div>Highlight Patterns:</div>
                </td>
                <td style="width: 40%;">
                    <select name="selectIndexpat" autocomplete="off" id="highpattern" style="margin-left: -25px; display: none;">
                        <option value="None" selected>None</option>
                        <option value="Dots">Dots</option>
                        <option value="Chessboard">Chessboard</option>
                        <option value="Triangle">Triangle</option>
                        <option value="Tile">Tile</option>
                        <option value="Grid">Grid</option>
                    </select>
                </td>
            </tr>
        </table>
    </div>

         @*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
             @*custom code end*@
    <script>
        var highlightselect = document.getElementById('highlight');
         @*custom code start*@
        var load = function (args) {
            var selectedTheme = themeName ? themeName : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast');
           // args.chart.width = ej.base.Browser.isDevice ? "100%" : "60%";

        }
        var mode = new ej.dropdowns.DropDownList({
            index: 0,
            placeholder: 'Select Range Bar Color',
            width: 120,
            change: function () {
                var chart = document.getElementById('container').ej2_instances[0];
                chart.selectionMode = mode.value;
                if (highlightselect.checked) {
                    chart.highlightMode = mode.value;
                }
                else {
                    chart.highlightMode = 'None';
                }
                chart.dataBind();
            }
        });
        mode.appendTo('#selmode');
        document.getElementById('select').onchange = () => {
           var chart = document.getElementById('container').ej2_instances[0];
            var element = (document.getElementById('select'));
            chart.isMultiSelect = element.checked;
        };

        var pattern = new ej.dropdowns.DropDownList({
            index: 0,
            placeholder: 'Select pattern values',
            width: 120,
            change: function () {
                var chart = document.getElementById("container").ej2_instances[0];
                chart.selectionPattern = pattern.value;
                chart.dataBind();
            }
        });
        pattern.appendTo('#selpattern');
        var highLight = new ej.dropdowns.DropDownList({
            index: 0,
            placeholder: 'Select pattern values',
            width: 120,
            change: function () {
                var chart = document.getElementById("container").ej2_instances[0];
                if (highlightselect.checked) {
                    chart.highlightPattern = highLight.value;
                }
                else {
                    chart.highlightPattern = 'None';
                }
                chart.dataBind();
            }
        });
        highLight.appendTo('#highpattern');
        var colorPicker = new ej.inputs.ColorPicker(
            {
                value: 'null',
                mode: 'Palette',
                change: function (args) {
                    var chart = document.getElementById('container').ej2_instances[0];
                    chart.highlightColor = args.currentValue.hex;
                    chart.dataBind();
                }
            });
        colorPicker.appendTo('#color-picker');
        document.getElementById('highlight').onchange = function () {
            var element = (document.getElementById('highlight'));
            var chart = document.getElementById("container").ej2_instances[0];
            if (element.checked) {
                chart.highlightMode = mode.value;
                chart.highlightPattern = highLight.value;
            }
            else {
                chart.highlightMode = 'None';
                chart.highlightPattern = 'None';
            }
            chart.dataBind();
        };
    </script>
}
         @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Selection in ASP.NET MVC Chart control. Explore here for more details."/>
                }
         @*custom code end*@
@section ActionDescription{
   <p>
           This sample demonstrates the selection behavior and its mode along with the highlight and highlight patterns in the chart.
        </p>
}
@section Description{
  <p>
            In this sample, any point or series can be selected in the chart by clicking on or touching the point. You can also change the selection mode by changing the <code>Selection Mode</code> option in the properties panel. You can enable multiple selections with the <code>Enable Multi Selection</code> option. You can also select a point while loading a chart using the <code>SelectedDataIndexes</code> option.

While hovering the point, the point is highlighted using the <code>Enable Highlight</code> option, as well as you can set different highlight patterns and colors using the <code>Highlight Patterns</code> and <code>Highlight Color</code> option.
        </p>
<p>
    Tap to select a point or series, double tap and drag to enable rectangular selection in touch enabled devices.
</p>
<p>
    Chart supports seven mode of selection which can be set using the 
    <code>SelectionMode</code> property.
</p>
<ul>
    <li>
        <code>Series</code> - Select the series in chart.
    </li>
    <li>
        <code>Point</code> - Select a point in the series .
    </li>
    <li>
        <code>Cluster</code> - Select a group of points in the chart.
    </li>
    <li>
        <code>DragXY</code> - Rectangular selection with respect to both axes.
    </li>
    <li>
        <code>DragX</code> - Rectangular selection with respect to horizontal axis.
    </li>
    <li>
        <code>DragY</code> - Rectangular selection with respect to vertical axis.
    </li>
    <li>
        <code>Lasso</code> - Select free form of selection area points.
    </li>
</ul>
 <br/>
         <p>
        More information about selection can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/selection/">documentation section</a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart Selection Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Selection in ASP.NET MVC Chart Control</h1>
                }