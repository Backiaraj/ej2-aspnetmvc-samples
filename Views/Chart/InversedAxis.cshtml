@using Syncfusion.EJ2;
<script src="~/Scripts/theme-color.js"></script>
@section ControlsSection{
<div class="control-section">
    <div style="text-align:center">
@(Html.EJS().Chart("container")
    .Series(sr =>
    {
        sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column)
            .Name("Rate")
            .XName("x")
            .YName("y")
            .Width(2)
            .Marker(mr=>mr.DataLabel(dl=>dl.Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Top).Font(ff => ff.FontWeight("600").Color("#ffffff"))))
            .DataSource(ViewBag.dataSource).Add();
    })
      .PrimaryXAxis(xaxis =>
         xaxis.OpposedPosition(true)
            .IsInversed(true)
            .MajorGridLines(mg=>mg.Width(0))
            .ValueType(Syncfusion.EJ2.Charts.ValueType.Category)
      )
      .PrimaryYAxis(yaxis =>
          yaxis.EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift)
            .LabelIntersectAction(Syncfusion.EJ2.Charts.LabelIntersectAction.Rotate90)
            .IsInversed(true)
            .MajorGridLines(mg=>mg.Width(0))
            .MajorTickLines(mt=>mt.Width(0))
            .LineStyle(ls=>ls.Width(0))
            .LabelStyle(ls=>ls.Color("transparent"))
      )
      .Title("Exchange Rate (INR per USD)")
      .Tooltip(tp => tp.Enable(true))
      .LegendSettings(lg => lg.Visible(false))
      .Load("load").ChartArea(area => area.Border(br=>br.Color("transparent"))).PointRender("labelRender").Render()
)       
    </div>
    <div style="float: right; margin-right: 10px; margin-top: -5px">
    </div>
</div>

 @*custom code start*@
<style>
    #control-container {
        padding: 0px !important;
    }
</style>
 @*custom code end*@
    <script>
        var labelRender = function (args) {
            var selectedTheme = themeName ? themeName : 'Material';
            if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {
                args.fill = fabricColors[args.point.index % 10];
            }
            else if (selectedTheme === 'material') {
                args.fill = materialColors[args.point.index % 10];
            }
            else {
                args.fill = bootstrapColors[args.point.index % 10];
            }
        };
         @*custom code start*@
        var load = function (args) {
            var selectedTheme = themeName ? themeName : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast');
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "60%";

        }
         @*custom code end*@
    </script>
}
 @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Inversed Axis in ASP.NET MVC Chart control. Explore here for more details."/>
                }
 @*custom code end*@
@section ActionDescription{
    <p>
        This sample illustrates inversed axis in chart to plot exchange rate over a period.
    </p>
}
@section Description{
    <p>
    In this example, you can see how to inverse an axis in chart. Here, both the X and Y axis are inversed using <code>isInversed</code> property.        
    </p>
    <p> DataLabel is used to represent individual data and its value.</p>
     <p>
      Tooltip is enabled in this example. To see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>
    <p>
        More information on inversed axis can be found in this
        <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-axis.html#isInversed">documentation section</a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart Inversed Axis Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Inversed Axis in ASP.NET MVC Chart Control</h1>
                }