@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section">
        <div style="text-align:center">
@(Html.EJS().Chart("container")
            .Series(sr =>
            {
                sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Area)
                   .Name("France")
                   .XName("x")
                   .YName("y")
                   .Width(2)
                   .DataSource(ViewBag.dataSource)
                   .Opacity(0.8).Add();
                sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Area)
                   .Name("US")
                   .XName("x")
                   .YName("y")
                   .Width(2)
                   .DataSource(ViewBag.dataSource1)
                   .Opacity(0.8).Add();
            })
              .PrimaryXAxis(xaxis =>
                 xaxis.MajorGridLines(mg=>mg.Width(0))
                       .ValueType(Syncfusion.EJ2.Charts.ValueType.Category)
                       .EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift)
                       .Interval(2)
              )
              .PrimaryYAxis(yaxis =>
                  yaxis.LabelFormat("{value}M")
                        .MajorTickLines(mt=>mt.Width(0))
                        .LineStyle(ls=>ls.Width(0))
                        .Title("Rates")
              )
          .Title("Inflation Rate")
          .ChartArea(area => area.Border(br=>br.Color("transparent"))).Load("load").Render()
)
        
        </div>
    </div>
@*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
    <script>
        var load = function (args) {
            var selectedTheme = themeName ? themeName : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast');
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "60%";
        }
    </script>
    @*custom code end*@
}
@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Area EmptyPoints in ASP.NET MVC Chart control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <p>
        This sample illustrates an area series with empty points. 
        Data points with null points are dropped here.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render a area series with empty points. This is similar to line type series, but the area get closed and filled with series color.
        You can use the <code>border</code> and <code>fill</code> properties to customize the area. <code>marker</code> and <code>dataLabel</code> are used to represent individual data and its value.
        Legend is enabled in this example with series type shape.
     </p>     
      <br>
        <p>
            More information on the area series can be found in this
            <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype">documentation section</a>.
        </p> 
}
@section Title{
                    <title>ASP.NET MVC Chart Area EmptyPoints Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Area EmptyPoints in ASP.NET MVC Chart Control</h1>
                }