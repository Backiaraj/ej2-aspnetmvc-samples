@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="control-section">
        <div style="text-align:center">
            @Html.EJS().Chart("container").Series(
series => {
    series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).Name("Total").XName("x").YName("yValue")
    .Marker(mr=>mr.DataLabel(dl=>dl.Visible(true).Name("text").Position(Syncfusion.EJ2.Charts.LabelPosition.Top).Font(ff => ff.FontWeight("600").Color("#ffffff"))))
    .DataSource(ViewBag.dataSource).Width(2).ColumnWidth(0.5).Add();
    series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).Name("Apple").XName("x").YName("yValue1")
   .Marker(mr => mr.DataLabel(dl => dl.Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Top).Font(ff => ff.FontWeight("600").Color("#ffffff"))))
    .DataSource(ViewBag.dataSource).Width(2).ColumnWidth(0.4).Add();
    series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).Name("Orange").XName("x").YName("yValue2")
    .Marker(mr => mr.DataLabel(dl => dl.Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Top).Font(ff => ff.FontWeight("600").Color("#ffffff"))))
    .DataSource(ViewBag.dataSource).Width(2).ColumnWidth(0.3).Add();
    series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column).Name("Grapes").XName("x").YName("yValue3")
    .Marker(mr => mr.DataLabel(dl => dl.Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Top).Font(ff => ff.FontWeight("600").Color("#ffffff"))))
    .DataSource(ViewBag.dataSource).Width(2).ColumnWidth(0.2).Add();

}).PrimaryXAxis(px => {
    px.ValueType(Syncfusion.EJ2.Charts.ValueType.Category).MajorGridLines(mg=>mg.Width(0)).
    Interval(1);
}).PrimaryYAxis(py => {
    py.Minimum(0).
    Maximum(12).
    Interval(3).
    LineStyle(ls => ls.Width(0)).
    LabelStyle(ls=>ls.Color("transparent")).MajorGridLines(mg => mg.Width(0)).
    MajorTickLines(mt=>mt.Width(0));
}).EnableSideBySidePlacement(false).Title("Fruit Consumption").ChartArea(area => area.Border(br=>br.Color("transparent"))
).Load("load").Tooltip( tt => { tt.Enable(true).Shared(true); }).Render()



        </div>
    </div>
@*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
    <script>
        var load = function (args) {
            var selectedTheme = themeName ? themeName : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast');
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "60%";
        }
    </script>
@*custom code end*@
}
@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Back To Back Column in ASP.NET MVC Chart control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <p>
        This sample illustrates four column series. Each column is rendered with different column width and it is placed behind another one.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the column type charts. Column type charts are used for comparing
        the frequency, count, total or average of data in different categories. You can use the <code>border</code>,
        <code>fill</code> properties to customize the vertical rectangle. <code>dataLabel</code> is used to represent individual
        data and its value.
    </p>
    <p>
        Tooltip is enabled in this example. To see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>
    <br>
    <p>
        More information on the column series can be found in this
        <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype">documentation section</a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart Back To Back Column Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Back To Back Column in ASP.NET MVC Chart Control</h1>
                }