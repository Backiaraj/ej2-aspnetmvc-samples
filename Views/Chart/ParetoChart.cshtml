@using Syncfusion.EJ2;
@section ControlsSection{
   <div class="control-section">
    <div style="text-align:center">
        @(Html.EJS().Chart("container")
    .Series(sr =>
    {
        sr.XName("DefectCategory")
             .YName("Y")
             .Name("Defect")
             .Width(2)
             .Marker(mr=>mr.Visible(true))
             .DataSource(ViewBag.ChartPoints)
             .Type(Syncfusion.EJ2.Charts.ChartSeriesType.Pareto).Add();
       })
      .PrimaryXAxis(xaxis =>
          xaxis.Interval(1)
            .ValueType(Syncfusion.EJ2.Charts.ValueType.Category).LabelIntersectAction(Syncfusion.EJ2.Charts.LabelIntersectAction.Rotate45)
             .MajorGridLines(mg => mg.Width(0))
                .MinorGridLines(mg => mg.Width(0))
                .MajorTickLines(mt => mt.Width(0))
                .MinorTickLines(mt => mt.Width(0))
                .LineStyle(ls => ls.Width(0))
      )
      .PrimaryYAxis(yaxis =>
          yaxis.Title("Frequency of Occurence")
                .Minimum(0)
                .Maximum(25)
                .Interval(5)
                .MajorGridLines(mg => mg.Width(1))
                .MinorGridLines(mg => mg.Width(1))
                .MajorTickLines(mt => mt.Width(0))
                .MinorTickLines(mt => mt.Width(0))
                .LineStyle(ls => ls.Width(0))
      )
      .Title("Pareto chart - Defects in Shirts")
      .LegendSettings(leg => leg.Visible(false))
      .Tooltip(tp => tp.Enable(true).Shared(false))
      .Load("load").ChartArea(area => area.Border(br => br.Width(0))).Render()
        )
    </div>
</div>

 @*custom code start*@
<style>
    #control-container {
        padding: 0px !important;
    }
</style>
    <script>
        function load(args) {
            var selectedTheme = themeName ? themeName : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast');
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "75%";
        }
    </script>
 @*custom code end*@
}
 @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Pare to Chart in ASP.NET MVC Chart control. Explore here for more details."/>
                }
 @*custom code end*@
@section ActionDescription{
    <p>
        This sample illustrates a pareto chart with line and column series.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure a pareto chart. The pareto chart is used to find the cumulative values of the data in different categories. It is a combination of the column and line series. The initial values are shown in the column chart and the cumulative values are shown in the line chart.
    </p>
    <p>
        <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>
    <p>
        More information about the pareto series can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/chart-types/pareto">documentation section</a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart Pare to Chart Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Pare to Chart in ASP.NET MVC Chart Control</h1>
                }