@using Syncfusion.EJ2;
@section ControlsSection{
    <div class="col-lg-9 control-section">
        @(Html.EJS().Chart("export-container")
    .Series(sr =>
    {
        sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column)
            .XName("Country")
            .YName("GigaWatts")
            .Name("Measurements (in Gigawatt)")
            .Marker(mr => mr.DataLabel(dl => dl.Visible(true).Position(Syncfusion.EJ2.Charts.LabelPosition.Top).Font(ff => ff.FontWeight("600").Color("#ffffff").Size("9px"))))
            .DataSource(ViewBag.ChartPoints).Add();
    })
      .PrimaryXAxis(xaxis =>
         xaxis.MajorGridLines(mg=>mg.Width(0))
              .MajorTickLines(mt => mt.Width(0))
              .ValueType(Syncfusion.EJ2.Charts.ValueType.Category)
              .Interval(1)
              .LabelRotation(-45)
      )
      .PrimaryYAxis(yaxis =>
          yaxis.Minimum(0)
            .Maximum(40)
            .MajorGridLines(mg=>mg.Width(2))
            .MajorTickLines(mt => mt.Width(0))
            .LineStyle(ls => ls.Width(0))
              .Interval(10)
      )
      .Title("Top 10 Countries Using Solar Power").LegendSettings(leg => leg.Visible(false))
      .Load("load").ChartArea(area => area.Border(br => br.Width(0))).PointRender("labelRender").Render()
   )
    </div>
    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%;">
            <tr style="height: 50px">
                <td style="width: 20%">
                    <div style="margin-left: -8%;">
                        Export Type
                    </div>
                </td>
                <td style="width: 80%;">
                    <div style="margin-left: -20px">
                        @Html.EJS().DropDownList("Export").Index(0).DataSource(ViewBag.data).Value("JPEG").Change("valueChange").Render()
                    </div>
                </td>
            </tr>
            <tr style="height: 50px">
                <td style="width: 40%">
                    <div style="margin-left: -8%;">File Name</div>
                </td>
                <td style="width: 40%;">
                    <div class="e-float-input" style='margin-top:5%;width:115%;margin-left:0%'>
                        <input type="text" value="Chart" id="fileName" style="margin-left: -20px">
                    </div>
                </td>
            </tr>
            <tr id="button-control" style="height: 50px" align='center'>
                <td>
                    <div style="margin-left: 62%;">
                        @Html.EJS().Button("togglebtn").IsPrimary(true).Content("Export").IconCss("e-icons e-export icon").Render()
                    </div>
                </td>
            </tr>
        </table>
    </div>
    <style>
        #button-control {
            width: 100%;
            text-align: center;
        }
        @*custom code start*@
        #control-container {
            padding: 0px !important;
        }
        @*custom code end*@
        .e-export-icon::before {
            content: '\e728';
        }

        .e-view.fabric .e-export-icon::before, .e-view.fabric-dark .e-export-icon::before {
            content: '\e710';
        }

        .e-view.bootstrap4 .e-export-icon::before {
            content: '\e780';
        }

        .e-view.tailwind-dark .e-export-icon::before, .e-view.tailwind .e-export-icon::before {
            content: '\e7bf';
        }

        .e-view.highcontrast .e-export-icon::before {
            content: '\e710';
        }

        .e-view.bootstrap5 .e-export-icon::before, .e-view.bootstrap5-dark .e-export-icon::before {
            content: '\e72e';
        }
    </style>
    <script src="~/Scripts/theme-color.js"></script>
    <script>
         @*custom code start*@
            var load = function (args) {
                var selectedTheme = themeName ? themeName : 'Material';
                args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast');
                args.chart.primaryXAxis.labelIntersectAction = ej.base.Browser.isDevice?'None':'Trim';
                args.chart.primaryYAxis.labelFormat = ej.base.Browser.isDevice?'{value}':'{value}GW';
                args.chart.series[0].marker.dataLabel.enableRotation = ej.base.Browser.isDevice?'true':'false';
                args.chart.series[0].marker.dataLabel.angle = ej.base.Browser.isDevice?'-90':'0';
            };
         @*custom code end*@
            var labelRender = function (args) {
                var selectedTheme = location.hash.split('/')[1];
                selectedTheme = selectedTheme ? selectedTheme : 'Material';
                var materialColors = ["#00bdae", "#404041", "#357cd2", "#e56590", "#f8b883", "#70ad47", "#dd8abd", "#7f84e8", "#7bb4eb",
                    "#ea7a57", "#404041", "#00bdae"];
                var fabricColors = ["#4472c4", "#ed7d31", "#ffc000", "#70ad47", "#5b9bd5",
                    "#c1c1c1", "#6f6fe2", "#e269ae", "#9e480e", "#997300", "#4472c4", "#70ad47", "#ffc000", "#ed7d31"];
                var bootstrapColors = ["#a16ee5", "#f7ce69", "#55a5c2", "#7ddf1e", "#ff6ea6",
                    "#7953ac", "#b99b4f", "#407c92", "#5ea716", "#b91c52"];
                var highContrastColors = ["#79ECE4", "#E98272", "#DFE6B6", "#C6E773", "#BA98FF",
                    "#FA83C3", "#00C27A", "#43ACEF", "#D681EF", "#D8BC6E"];
                var fluentColors = ['#1AC9E6', '#DA4CB2', '#EDBB40', '#AF4BCF', '#FF7266', '#1BD565', '#EE993D', '#5887FF', '#EC548D',
                    '#7D39C0'];
                var fluentDarkColors = ['#1AC9E6', '#DA4CB2', '#EDBB40', '#AF4BCF', '#FF7266', '#1BD565', '#EE993D', '#5887FF', '#EC548D',
                    '#7D39C0'];
                if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {
                    args.fill = fabricColors[args.point.index % 10];
                }
                else if (selectedTheme === 'material') {
                    args.fill = materialColors[args.point.index % 10];
                }
                else if (selectedTheme === 'fluent') {
                    args.fill = fluentColors[args.point.index % 10];
                }
                else if (selectedTheme === 'fluent-dark') {
                    args.fill = fluentDarkColors[args.point.index % 10];
                }
                else {
                    args.fill = bootstrapColors[args.point.index % 10];
                }
            };
            var mode = "JPEG";
            function valueChange() {
                var exportType = document.getElementById('Export').ej2_instances[0];
                mode = exportType.value;
            }
            document.getElementById('togglebtn').onclick = function () {
                var chart = document.getElementById('export-container').ej2_instances[0];
                var fileName = (document.getElementById('fileName')).value;
                chart.exportModule.export(mode, fileName);
            };
    </script>
}
@*custom code start*@
@section Meta{
    <meta name="description" content="This example demonstrates the Export in ASP.NET MVC Chart control. Explore here for more details." />
}
@*custom code end*@
@section ActionDescription{
    <p>
        This sample demonstrates client-side exporting of the chart, enabling you to export its data to Excel, PDF, and CSV formats. Additionally, it allows you to save the chart in image formats such as JPEG, PNG, and SVG.
    </p>
}
@section Description{
    <p>
        In this example, you can see how the export functionality is configured. The rendered chart can be exported in JPEG, PNG, SVG, and PDF file types. Data from the chart can also be exported to Excel and CSV files.
    </p>
    <p>
        More information on the export can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetmvc/documentation/chart/chart-print?cs-save-lang=1&cs-lang=razor#export">documentation section</a>.
    </p>
}

@section Title{
    <title>ASP.NET MVC Chart Export Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Export in ASP.NET MVC Chart Control</h1>
}