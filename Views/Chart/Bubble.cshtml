@using Syncfusion.EJ2;
@section ControlsSection{
<script src="~/Scripts/theme-color.js"></script>
    <div class="control-section">
        <div style="text-align:center">
            @Html.EJS().Chart("container").Series(
    series =>
    {
        series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Bubble).
        Name("Pound").
        XName("xValue").
        YName("yValue").
        Size("size").
        Marker(mr=>mr.DataLabel(dl=>dl.Name("text"))).
        DataSource(ViewBag.dataSource).
        MinRadius(3).
        MaxRadius(8).
       Add();
    }).PrimaryXAxis(
       xAxis =>
       {
           xAxis.Title("Literacy Rate").
            Minimum(60).
            Maximum(100).
            Interval(5);
       }).PrimaryYAxis(
       yAxis =>
       {
           yAxis.Title("GDP Growth Rate").
            Minimum(0).
            Maximum(10).
            Interval(2.5);
       }).Tooltip(
       tooltip =>
       {
           tooltip.Enable(true).
           Format("${point.text}<br/> Literacy Rate:<b>${point.x}%</b><br/>GDP Annual Growth Rate : <b>${point.y}</b><br/>Population : <b>${point.size} Billion</b>");
       }).Title("World Countries Details").LegendSettings(
       legend =>
       {
           legend.Visible(false);
       }).Load("load").PointRender("pointRender").Render()

    </div>
</div>

@*custom code start*@
<style>
    #control-container {
        padding: 0px !important;
    }
</style>
@*custom code end*@
<script>
    var pointRender = function (args) {
        var selectedTheme = themeName ? themeName : 'Material';
        if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {
            args.fill = fabricColors[args.point.index % 10];
        }
        else if (selectedTheme === 'material') {
            args.fill = materialColors[args.point.index % 10];
        }
        else if (selectedTheme === 'fluent') {
            args.fill = fluentColors[args.point.index % 10];
        }
        else if (selectedTheme === 'fluent-dark') {
            args.fill = fluentDarkColors[args.point.index % 10];
        }
        else {
            args.fill = bootstrapColors[args.point.index % 10];
        }
    };
    @*custom code start*@
    var load = function (args) {
        var selectedTheme = themeName ? themeName : 'Material';
        args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast');
        args.chart.width = ej.base.Browser.isDevice ? "100%" : "60%";
    };
@*custom code end*@
</script>
}
@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Bubble in ASP.NET MVC Chart control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <p>
        This sample visualizes the Literacy Rate and GDP Growth Rate of world countries by using bubble series in the chart. Tooltip shows the information about the countries.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the bubble type charts. A bubble chart is a type of chart that displays three dimensions of data. 
        Each points is drawn as a bubble, where bubble's size depends on the <code>size</code> property. You can use <code>fill</code> property to customize the data appearance.        
    </p>
    <p>
        Tooltip is enabled in this example. To see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>
    <br>
    <p>
        More information on the bubble series can be found in this
        <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype">documentation section</a>.
    </p>
}
@section Title{
                    <title>ASP.NET MVC Chart Bubble Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Bubble in ASP.NET MVC Chart Control</h1>
                }