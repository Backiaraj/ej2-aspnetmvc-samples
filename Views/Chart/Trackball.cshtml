@using Syncfusion.EJ2;
@section ControlsSection{
    <script src="~/Scripts/trackball-data.js"></script>
    <div class="control-section">
        <div style="text-align:center">
            @Html.EJS().Chart("container-vertical").Series(series =>
       {
           series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Line).XName("x").YName("y").Marker(mr=>mr.Visible(true))
.DataSource("john").Name("John").Width(2).Add();
           series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Line).XName("x").YName("y").Marker(mr=>mr.Visible(true))
.DataSource("andrew").Name("Andrew").Width(2).Add();
           series.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Line).XName("x").YName("y").Marker(mr=>mr.Visible(true))
.DataSource("thomas").Name("Thomas").Width(2).Add();
       }).PrimaryXAxis(px => px.EdgeLabelPlacement(Syncfusion.EJ2.Charts.EdgeLabelPlacement.Shift).MajorGridLines(mg=>mg.Width(0)).LineStyle(ls=>ls.Width(0)).ValueType(Syncfusion.EJ2.Charts.ValueType.DateTime).Skeleton("y")
             ).PrimaryYAxis(py => py.Title("Revenue").MajorTickLines(mt=>mt.Width(0)).LineStyle(ls=>ls.Width(0)).Minimum(10).Maximum(80).LabelFormat("{value}M")
             ).ChartArea(area => area.Border(br=>br.Color("transparent"))).Tooltip(tl =>tl.Enable(true).Shared(true)).Crosshair(cr => cr.Enable(true).LineType(Syncfusion.EJ2.Charts.LineType.Vertical)).Title("Average Sales per Person").Load("load").Render()
        </div>
    </div>
  @*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
  @*custom code end*@
    <script>
        var john = john;
        var andrew = andrew;
        var thomas = thomas;
    @*custom code start*@
        var load = function (args) {
            var selectedTheme = themeName ? themeName : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast');
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "60%";

        };
      @*custom code end*@
    </script>
}
  @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Trackball in ASP.NET MVC Chart control. Explore here for more details."/>
                }
  @*custom code end*@
@section ActionDescription{
   <p>
    This sample illustrates trackball feature in chart. To show trackball, hover or long press the chart and you can see the point value near to the mouse point.
</p>
}
@section Description{
    <p>
    This sample demonstrates the trackball behavior in chart. Trackball is used to track a data point closer to the current mouse position or touch contact point.
    You can show tooltip for individual point or group of points closer to mouse position using <code>shared</code> properties in tooltip.
</p>
<p>
    Hover the chart area to view trackball and its tooltip. Touch and hold to enable trackball in touch enabled devices.
</p>
<br>
<p>
    More information on the Tooltip and Trackball can be found in this
    <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-tooltipOptionsModel.html">documentation section</a>.
</p>  
}
@section Title{
                    <title>ASP.NET MVC Chart Trackball Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Trackball in ASP.NET MVC Chart Control</h1>
                }