@using Syncfusion.EJ2;
@section ControlsSection{
    <div>
        <div class="col-lg-9 control-section">
@(Html.EJS().Chart("print-container")
    .Series(sr =>
    {
        sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Column)           
            .Name("2015")
            .XName("xValue")
            .YName("yValue")
            .Width(2)
            .DataSource(ViewBag.dataSource).Add();      
    })
      .PrimaryXAxis(xaxis =>
         xaxis.ValueType(Syncfusion.EJ2.Charts.ValueType.Category)
              .Title("Manager")
              .MajorGridLines(mg=>mg.Width(0))
      )
      .PrimaryYAxis(yaxis =>
          yaxis.Title("Sales")
                .Minimum(0)
                .Maximum(20000)
                .MajorGridLines(mg=>mg.Width(0))
      ).LegendSettings(legend => legend.Visible(false))
      .Title("Sales Comparision").ChartArea(area => area.Border(br=>br.Color("transparent"))).Load("load").ChartMouseClick("chartMouseClick").PointRender("labelRender").Render()
)
               </div>
        <div class="col-lg-3 property-section">
            <table id="property" title="Properties" style="width: 100%">
                <tr id="button-control" style="height: 50px">
                    <td align='center'>
                        <div>
                           @Html.EJS().Button("togglebtn").IsPrimary(true).Content("Print").IconCss("e-icons e-print-icon").CssClass("e-flat").Render()
                        </div>
                    </td>
                </tr>
            </table>
        </div>
        </div>

        <style>
         @*custom code start*@
            #control-container {
                padding: 0px !important;
            }
         @*custom code end*@
            #button-control {
                width: 100%;
                text-align: center;
            }
            .e-print-icon::before {
                content: '\e34b';
            }

            .e-view.fabric .e-print-icon::before, .e-view.fabric-dark .e-print-icon::before {
                content: '\e7df';
            }

            .e-view.bootstrap .e-print-icon::before {
                content: '\ebd2';
            }

            .e-view.bootstrap4 .e-print-icon::before {
                content: '\e743';
            }

            .e-view.tailwind .e-print-icon::before, .e-view.tailwind-dark .e-print-icon::before {
                content: '\e76c';
            }

            .e-view.highcontrast .e-print-icon::before {
                content: '\ebf9';
            }

            .e-view.bootstrap5 .e-print-icon::before, .e-view.bootstrap5-dark .e-print-icon::before {
                content: '\e75d';
            }
        </style>
        <script src="~/Scripts/theme-color.js"></script>
        <script>
         @*custom code start*@
            var load = function (args) {
                var selectedTheme = themeName ? themeName : 'Material';
                args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast');
            };
             @*custom code end*@
            var chartMouseClick = function (args) {
                var chart = document.getElementById('print-container').ej2_instances[0];
                if (args.target.indexOf('print') > -1) {
                    chart.print();
                }
            };
            var labelRender = function (args) {
                var selectedTheme = location.hash.split('/')[1];
                selectedTheme = selectedTheme ? selectedTheme : 'Material';
                if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {
                    args.fill = fabricColors[args.point.index % 10];
                }
                else if (selectedTheme === 'material') {
                    args.fill = materialColors[args.point.index % 10];
                }
                else {
                    args.fill = bootstrapColors[args.point.index % 10];
                }
            };
            document.getElementById('togglebtn').onclick = function () {
                var chart = document.getElementById('print-container').ej2_instances[0];
                chart.print();
            };
        </script>
}
 @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Print in ASP.NET MVC Chart control. Explore here for more details."/>
                }
 @*custom code end*@
@section ActionDescription{
    <p>
    This sample illustrates the print feature in chart. By clicking <code>Print</code>, you can print the chart directly from the browser.
</p>
}
@section Description{
   <p>
    In this example, you can see how to render and configure the print.
    The rendered chart can be printed directly from the browser by calling the public method print.
</p>
<p>
    More information on the print can be found in this
    <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype">documentation section</a>.
</p> 
}
@section Title{
                    <title>ASP.NET MVC Chart Print Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Print in ASP.NET MVC Chart Control</h1>
                }