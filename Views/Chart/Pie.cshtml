@using Syncfusion.EJ2;
@section ControlsSection{   
<div>
    <div class="col-lg-9 control-section">
        <div class="content-wrapper">
            <div id="container">
                @(Html.EJS().AccumulationChart("container").Series(series =>
            {
                series.DataLabel(dl => dl.Visible(true).Name("text").Position(Syncfusion.EJ2.Charts.AccumulationLabelPosition.Inside).Font(ft => ft.FontWeight("600")))
                      .XName("xValue")
                      .YName("yValue")
                      .Name("Browser")
                      .Type(Syncfusion.EJ2.Charts.AccumulationType.Pie)
                      .Radius("70%")
                      .StartAngle(0)
                      .EndAngle(360)
                      .InnerRadius("0%")
                      .Explode(true)
                      .ExplodeOffset("10%")
                      .ExplodeIndex(5)
                      .DataSource(ViewBag.dataSource).Add();
            })
            .EnableSmartLabels(true)
            .EnableAnimation(false)
            .Title("Mobile Browser Statistics")
            .LegendSettings(ls => ls.Visible(false))
            .Tooltip(tp => tp.Enable(true).Format("${point.x} : <b>${point.y}%</b>"))
            .Load("load").Render()
                )
            </div>
        </div>
    </div>
    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tbody>
                <tr style="height: 50px">
                    <td style="width: 50%">
                        <div>
                            Pie Angle:
                        </div>
                    </td>
                    <td style="width: 40%;">
                        <div data-role="rangeslider">
                            <input type="range" name="range-min" id="pieangle" value="0" min="0" max="360" style="width:90%">
                        </div>
                    </td>
                    <td style="width: 30%;">
                        <p id="anglevalue" style="font-weight: normal;padding-top:15px">0</p>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 30%">
                        <div>
                            Outer Radius:
                        </div>
                    </td>
                    <td style="width: 40%;">
                        <div data-role="rangeslider">
                            <input type="range" name="range-min" id="pieradius" value="70" min="0" max="80" style="width:90%">
                        </div>
                    </td>
                    <td style="width: 30%;">
                        <p id="radius" style="font-weight: normal;padding-top:15px">0.70</p>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 30%">
                        <div>
                            Explode Radius:
                        </div>
                    </td>
                    <td style="width: 40%;">
                        <div data-role="rangeslider">
                            <input type="range" name="range-min" id="pieexploderadius" value="10" min="0" max="40" style="width:90%">
                        </div>
                    </td>
                    <td style="width: 30%;">
                        <p id="exploderadius" style="font-weight: normal;padding-top:15px">0.10</p>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 30%">
                        <div>
                            Explode Index:
                        </div>
                    </td>
                    <td style="width: 70%;">
                        <div data-role="rangeslider">
                            <input type="range" name="range-min" id="pieexplodeindex" value="5" min="0" max="5" style="width:90%">
                        </div>
                    </td>
                    <td style="width: 30%;">
                        <p id="explodeindex" style="font-weight: normal;padding-top:15px">5</p>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 30%">
                        <div>
                            Center X
                        </div>
                    </td>
                    <td style="width: 70%;">
                        <div data-role="rangeslider">
                            <input type="range" name="range-min" id="x" value="50" min="0" max="100" style="width:90%">
                        </div>
                    </td>
                    <td style="width: 60%;">
                        <div data-role="rangeslider">
                            <p id="xvalue" style="font-weight: normal;padding-top:10px;">50%</p>
                        </div>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 30%">
                        <div>                            
                            Center Y
                        </div>
                    </td>
                    <td style="width: 70%;">
                        <div data-role="rangeslider">
                            <input type="range" name="range-min" id="y" value="50" min="0" max="100" style="width:90%">
                        </div>
                    </td>
                    <td style="width: 60%;">
                        <div data-role="rangeslider">
                            <p id="yvalue" style="font-weight: normal;padding-top:10px;">50%</p>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>
    <script>
     @*custom code start*@
        var load = function (args) {
            var selectedTheme = themeName ? themeName : 'Material';
            args.accumulation.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast');
        }
     @*custom code end*@   
        function anglechange(value) {
            var pie = document.getElementById("container").ej2_instances[0];
            pie.series[0].startAngle = +value;
            pie.series[0].endAngle = +value;
            document.getElementById('anglevalue').innerHTML = value.toString();
            pie.removeSvg();
            pie.refreshSeries();
            pie.refreshChart();
        }
        document.getElementById('pieangle').onpointermove = document.getElementById('pieangle').ontouchmove =
            document.getElementById('pieangle').onchange = function (e) {
                anglechange(+document.getElementById('pieangle').value);
            };
        function radiuschange(value) {
            var pie = document.getElementById("container").ej2_instances[0];
            pie.series[0].radius = value + '%';
            document.getElementById('radius').innerHTML = (value / 100).toFixed(2);
            pie.removeSvg();
            pie.refreshSeries();
            pie.refreshChart();
        }
        document.getElementById('pieradius').onpointermove = document.getElementById('pieradius').ontouchmove =
            document.getElementById('pieradius').onchange = function (e) {
                radiuschange(+document.getElementById('pieradius').value);
            };
        function exploderadius(value) {
            var pie = document.getElementById("container").ej2_instances[0];
            pie.series[0].explodeOffset = value + '%';
            pie.series[0].animation.enable = false;
            document.getElementById('exploderadius').innerHTML = (value / 100).toFixed(2);
            pie.removeSvg();
            pie.refreshSeries();
            pie.refreshChart();
        }
        document.getElementById('pieexploderadius').onpointermove = document.getElementById('pieexploderadius').ontouchmove =
            document.getElementById('pieexploderadius').onchange = function (e) {
                exploderadius(+document.getElementById('pieexploderadius').value);
            };
        function explodeIndex(value) {
            var pie = document.getElementById("container").ej2_instances[0];
            pie.visibleSeries[0].explodeIndex = +value;
            document.getElementById('explodeindex').innerHTML = value.toString();
            pie.removeSvg();
            pie.refreshSeries();
            pie.refreshChart();
        }
        document.getElementById('pieexplodeindex').onpointermove = document.getElementById('pieexplodeindex').ontouchmove =
            document.getElementById('pieexplodeindex').onchange = function (e) {
                explodeIndex(+document.getElementById('pieexplodeindex').value);
            };
        function xchange(value) {
            var pie = document.getElementById("container").ej2_instances[0];
            pie.center.x = value + '%';
            document.getElementById('xvalue').innerHTML = value + '%';
            pie.removeSvg(); pie.refreshSeries(); pie.refreshChart();
        }
        document.getElementById('x').onpointermove = document.getElementById('x').ontouchmove =
            document.getElementById('x').onchange = function (e) {
            xchange(+document.getElementById('x').value);
        };
        function ychange(value) {
            var pie = document.getElementById("container").ej2_instances[0];
            pie.center.y = value + '%';
            document.getElementById('yvalue').innerHTML = value + '%';
            pie.removeSvg(); pie.refreshSeries(); pie.refreshChart();
        }
        document.getElementById('y').onpointermove = document.getElementById('y').ontouchmove =
            document.getElementById('y').onchange = function (e) {
                ychange(+document.getElementById('y').value);
            };

    </script>
}
 @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Pie in ASP.NET MVC Chart control. Explore here for more details."/>
                }
 @*custom code end*@
@section ActionDescription{
    <p>
        This sample demonstrates pie chart for mobile browser usage statistics. <code>Datalabel</code> shows the Information about the points.
        While hovering on the slice, border will be highlighted.
    </p>
}
@section Description{
    <p> In this example, you can see how to render and configure the pie chart. You can use <code>border</code> and <code>fill</code> properties to customize the pie point. <code>dataLabel</code> is used to represent individual data and its value.</p>
<p> <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover a point or tap on a point in touch enabled devices.</p>
}
@section Title{
                    <title>ASP.NET MVC Chart Pie Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Pie in ASP.NET MVC Chart Control</h1>
                }