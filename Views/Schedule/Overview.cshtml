@using Syncfusion.EJ2
@using Syncfusion.EJ2.Schedule
@using Syncfusion.EJ2.Navigations;
@using Syncfusion.EJ2.DropDowns

@{
    ViewData["Title"] = "Overview";
    string timelineTemplate = "<div style='height:46px;line-height:23px;'><div class='icon-child' style='text-align:center;'><button id='timeline_views'></button></div><div class='text-child' style='font-size:14px;'>Timeline Views</div></div>";
    string multiDragTemplate = "<div style='height:46px;line-height:23px;'><div class='icon-child' style='text-align:center;'><button id='multi_Drag'></button></div><div class='text-child' style='font-size:14px;'>Allow Multi Drag</div></div>";
    string groupTemplate = "<div style='height:46px;line-height:23px;'><div class='icon-child' style='text-align:center;'><button id='grouping'></button></div><div class='text-child' style='font-size:14px;'>Grouping</div></div>";
    string gridlineTemplate = "<div style='height:46px;line-height:23px;'><div class='icon-child' style='text-align:center;'><button id='gridlines'></button></div><div class='text-child' style='font-size:14px;'>Gridlines</div></div>";
    string autoHeightTemplate = "<div style='height:46px;line-height:23px;'><div class='icon-child' style='text-align:center;'><button id='row_auto_height'></button></div><div class='text-child' style='font-size:14px;'>Row Auto Height</div></div>";
    string tooltipTemplate = "<div style='height:46px;line-height:23px;'><div class='icon-child' style='text-align:center;'><button id='tooltip'></button></div><div class='text-child' style='font-size:14px;'>Tooltip</div></div>";
    string dateHeaderTemplate = "<div class='date - text'>${getDateHeaderText(data.date)}</div>${getWeather(data.date)}";
    string timezone = "Etc/GMT";
}

@section ControlsSection{
    <div class="col-lg-12 control-section">
        <div class="content-wrapper">
            <div class="schedule-overview">
                <div class="overview-header">
                    <div class="overview-titlebar">
                        <div class="left-panel">
                            <div class="schedule-overview-title" style="border: 1px solid transparent;">Scheduler Overview Functionalities</div>
                        </div>
                        <div class="center-panel">
                            @Html.EJS().Button("timezoneBtn").CssClass("title-bar-btn").Content("UTC").Disabled(true).IconCss("e-icons e-time-zone").Render()
                            @Html.EJS().Button("timeBtn").CssClass("title-bar-btn").Content("Time").Disabled(true).IconCss("e-icons e-clock").Render()
                        </div>
                        <div class="right-panel">
                            <div class="control-panel calendar-export">
                                @Html.EJS().Button("printBtn").CssClass("title-bar-btn").Content("Print").IconCss("e-icons e-print").Render()
                            </div>
                            <div class="control-panel" style="display: inline-flex;padding-left:15px;">
                                <div class="e-icons e-upload-1 e-btn-icon e-icon-left" style="line-height: 40px;"></div>
                                @Html.EJS().Uploader("icalendar").AllowedExtensions(".ics").CssClass("calendar-import").ShowFileList(false).Buttons(new Syncfusion.EJ2.Inputs.UploaderButtonsProps { Browse = "Import" }).Selected("onSelected").Multiple(false).Render()
                            </div>
                            <div class="control-panel calendar-export">
                                @Html.EJS().DropDownButton("exporting").Content("Export").Items(ViewBag.ExportItems).Select("onExportItemSelect").Render()
                            </div>
                        </div>
                    </div>
                </div>
                <div class="overview-toolbar">
                    <div style="height: 70px;width: calc(100% - 90px);">
                        @Html.EJS().Toolbar("toolbar_options").Height("70px").OverflowMode(Syncfusion.EJ2.Navigations.OverflowMode.Scrollable).ScrollStep(100).Created("onToolbarCreated").Clicked("onToolbarItemClick").Items(new List<ToolbarItem> {
                       new ToolbarItem { PrefixIcon = "e-icons e-plus", TooltipText = "New Event", Text = "New Event"  },
                       new ToolbarItem { PrefixIcon = "e-icons e-repeat", TooltipText = "New Recurring Event", Text = "New Recurring Event"  },
                       new ToolbarItem { Type = ItemType.Separator },
                       new ToolbarItem { PrefixIcon = "e-icons e-day", TooltipText = "Day", Text = "Day"  },
                       new ToolbarItem { PrefixIcon = "e-icons e-week", TooltipText = "Week", Text = "Week"  },
                       new ToolbarItem { PrefixIcon = "e-icons e-week", TooltipText = "WorkWeek", Text = "WorkWeek"  },
                       new ToolbarItem { PrefixIcon = "e-icons e-month", TooltipText = "Month", Text = "Month"  },
                       new ToolbarItem { PrefixIcon = "e-icons e-month", TooltipText = "Year", Text = "Year"  },
                       new ToolbarItem { PrefixIcon = "e-icons e-agenda-date-range", TooltipText = "Agenda", Text = "Agenda" },
                       new ToolbarItem { TooltipText="Timeline Views", Template= timelineTemplate },
                       new ToolbarItem { Type = ItemType.Separator },
                       new ToolbarItem { TooltipText = "Resource Grouping", Template = groupTemplate },
                       new ToolbarItem { TooltipText = "Gridlines", Template = gridlineTemplate },
                       new ToolbarItem { TooltipText = "Row Auto Height", Template = autoHeightTemplate },
                       new ToolbarItem { TooltipText = "Tooltip", Template = tooltipTemplate },
                       new ToolbarItem { TooltipText = "Allow Multi Drag", Template = multiDragTemplate }}).Render()
                    </div>
                    <div style="height:70px;width:90px;">
                        @Html.EJS().Button("settingsBtn").CssClass("overview-toolbar-settings").Content("Settings").IconCss("e-icons e-settings").IconPosition(Syncfusion.EJ2.Buttons.IconPosition.Top).Render()
                    </div>
                </div>
                <div class="overview-content">
                    <div class="left-panel">
                        <div class="overview-scheduler">
                            @Html.EJS().Schedule("scheduler").CssClass("schedule-overview").Height("100%").Timezone("UTC").DateHeaderTemplate(dateHeaderTemplate).QuickInfoTemplates(new ScheduleQuickInfoTemplates { Header = "#header-template", Content = "#content-template", Footer = "#footer-template" }).PopupOpen("onPopupOpen").Group(group => group.Resources(ViewBag.Resources)).Resources(res =>
                       {
                           res.DataSource(ViewBag.Calendars); res.Query("new ej.data.Query().where('CalendarId', 'equal', 1)").Field("CalendarId").Title("Calendars").Name("Calendars").TextField("CalendarName").IdField("CalendarId").ColorField("CalendarColor").AllowMultiple(true).Add();
                       }).Views(view => { view.Option(View.Day).Add(); view.Option(View.Week).Add(); view.Option(View.WorkWeek).Add(); view.Option(View.Month).Add(); view.Option(View.Year).Add(); view.Option(View.Agenda).Add(); view.Option(View.TimelineDay).Add(); view.Option(View.TimelineWeek).Add(); view.Option(View.TimelineWorkWeek).Add(); view.Option(View.TimelineMonth).Add(); view.Option(View.TimelineYear).Add(); }).EventSettings(new ScheduleEventSettings { DataSource = ViewBag.Appointments }).Render()
                            @Html.EJS().ContextMenu("ContextMenu").CssClass("schedule-context-menu").BeforeOpen("onContextMenuBeforeOpen").Select("onMenuItemSelect").Target(".e-schedule").Items(ViewBag.MenuItems).Render()
                        </div>
                    </div>
                    <div class="right-panel hide">
                        <div class="control-panel e-css">
                            <div class="col-row">
                                <div class="col-left">
                                    <label style="line-height: 34px; margin: 0;">First Day of Week</label>
                                </div>
                                <div class="col-right">
                                    @Html.EJS().DropDownList("weekFirstDay").Width("170px").Value("0").PopupHeight("150px").DataSource(ViewBag.WeekDays).Fields(new DropDownListFieldSettings { Text = "text", Value = "value" }).Change("onWeekFirstDayChange").Render()
                                </div>
                            </div>
                            <div class="col-row">
                                <div class="col-left">
                                    <label style="line-height: 34px; margin: 0;">Work week</label>
                                </div>
                                <div class="col-right">
                                    @Html.EJS().MultiSelect("workWeekDays").Width("170px").CssClass("schedule-workweek").Mode(VisualMode.CheckBox).PopupHeight("150px").EnableSelectionOrder(false).ShowDropDownIcon(true).ShowClearButton(false).Value(ViewBag.Values).DataSource(
                            ViewBag.WeekDays).Fields(new MultiSelectFieldSettings { Text = "text", Value = "value" }).Change("onWeekDaysChange").Render()
                                </div>

                            </div>
                            <div class="col-row">
                                <div class="col-left">
                                    <label style="line-height: 34px; margin: 0;">Resources</label>
                                </div>
                                <div class="col-right">
                                    @Html.EJS().MultiSelect("resources").CssClass("schedule-workweek").Width("170px").Mode(VisualMode.CheckBox).PopupHeight("150px").EnableSelectionOrder(false).ShowDropDownIcon(true).ShowClearButton(false).Value(ViewBag.ResourceValues).DataSource(
                            ViewBag.Calendars).Fields(new MultiSelectFieldSettings { Text = "CalendarName", Value = "CalendarId" }).Change("onCalendarChange").Render()
                                </div>
                            </div>
                            <div class="col-row">
                                <div class="col-left">
                                    <label style="line-height: 34px; margin: 0;">Timezone</label>
                                </div>
                                <div class="col-right">
                                    @Html.EJS().DropDownList("timezone").Width("170px").Value(timezone).PopupHeight("150px").DataSource(ViewBag.TimezoneData).Fields(new DropDownListFieldSettings { Text = "text", Value = "value" }).Change("onTimezoneChange").Render()
                                </div>
                            </div>
                            <div class="col-row">
                                <div class="col-left">
                                    <label style="line-height: 34px; margin: 0;">Day Start Hour</label>
                                </div>
                                <div class="col-right">
                                    @Html.EJS().TimePicker("dayStartHour").Width("170px").ShowClearButton(false).Value(new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day, 0, 0, 0)).Change("onDayStartHourChange").Render()
                                </div>
                            </div>
                            <div class="col-row">
                                <div class="col-left">
                                    <label style="line-height: 34px; margin: 0;">Day End Hour</label>
                                </div>
                                <div class="col-right">
                                    @Html.EJS().TimePicker("dayEndHour").Width("170px").ShowClearButton(false).Value(new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day, 23, 59, 59)).Change("onDayEndHourChange").Render()
                                </div>
                            </div>
                            <div class="col-row">
                                <div class="col-left">
                                    <label style="line-height: 34px; margin: 0;">Work Start Hour</label>
                                </div>
                                <div class="col-right">
                                    @Html.EJS().TimePicker("workHourStart").Width("170px").ShowClearButton(false).Value(new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day, 9, 0, 0)).Change("onWorkStartHourChange").Render()
                                </div>
                            </div>
                            <div class="col-row">
                                <div class="col-left">
                                    <label style="line-height: 34px; margin: 0;">Work End Hour</label>
                                </div>
                                <div class="col-right">
                                    @Html.EJS().TimePicker("workHourEnd").Width("170px").ShowClearButton(false).Value(new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day, 18, 0, 0)).Change("onWorkEndHourChange").Render()
                                </div>
                            </div>
                            <div class="col-row">
                                <div class="col-left">
                                    <label style="line-height: 34px; margin: 0;">Slot Duration</label>
                                </div>
                                <div class="col-right">
                                    @Html.EJS().DropDownList("slotDuration").Width("170px").Value("60").PopupHeight("150px").DataSource(ViewBag.SlotIntervalDataSource).Fields(new DropDownListFieldSettings { Text = "Text", Value = "Value" }).Change("onSlotIntervalChange").Render()
                                </div>
                            </div>
                            <div class="col-row">
                                <div class="col-left">
                                    <label style="line-height: 34px; margin: 0;">Slot Interval</label>
                                </div>
                                <div class="col-right">
                                    @Html.EJS().DropDownList("slotInterval").Width("170px").Value("2").PopupHeight("150px").DataSource(ViewBag.slotCounts).Fields(new DropDownListFieldSettings { Text = "Text", Value = "Value" }).Change("onSlotCountChange").Render()
                                </div>
                            </div>
                            <div class="col-row">
                                <div class="col-left">
                                    <label style="line-height: 34px; margin: 0;">Time Format</label>
                                </div>
                                <div class="col-right">
                                    @Html.EJS().DropDownList("timeFormat").Width("170px").Value("hh:mm a").PopupHeight("150px").DataSource(ViewBag.TimeFormat).Fields(new DropDownListFieldSettings { Text = "Text", Value = "Value" }).Change("onTimeFormatChange").Render()
                                </div>
                            </div>
                            <div class="col-row">
                                <div class="col-left">
                                    <label style="line-height: 34px; margin: 0;">Week Numbers</label>
                                </div>
                                <div class="col-right">
                                    @Html.EJS().DropDownList("week_number").Width("170px").Value("Off").PopupHeight("150px").Fields(new DropDownListFieldSettings { Text = "Text", Value = "Value" }).DataSource(ViewBag.WeekNumber).Change("onWeekNumberChange").Render()
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @*custom code start*@
    <style>
        .tailwind .e-settings::before,
        .tailwind-dark .e-settings::before {
            font-size: 14px;
        }

        .tailwind.e-bigger .e-settings,
        .tailwind-dark.e-bigger .e-settings {
            font-size: 16px !important;
        }

        .material .schedule-overview .overview-toolbar .e-toolbar {
            border-style: solid;
        }

        .material .schedule-overview .overview-header .overview-titlebar .e-upload.calendar-import .e-upload-browse-btn,
        .material-dark .schedule-overview .overview-header .overview-titlebar .e-upload.calendar-import .e-upload-browse-btn {
            text-transform: capitalize;
            box-shadow: none;
        }

        .highcontrast .schedule-overview .overview-header .overview-titlebar {
            background-color: #ffd939;
            color: black;
        }

        .highcontrast .schedule-overview .overview-header,
        .highcontrast .schedule-overview .overview-content {
            border: 1px solid #969696;
        }

        .tailwind-dark .schedule-overview .overview-header,
        .tailwind-dark .schedule-overview .overview-content {
            border: 1px solid #4b5563;
            border-top: 0;
        }

        .highcontrast .schedule-overview .overview-content {
            border-top: 0;
        }

        .fabric-dark .schedule-overview .overview-content {
            border: 1px solid #414040;
        }

        .fabric-dark .schedule-overview .overview-toolbar .overview-toolbar-settings {
            border-color: #414040;
        }

        .tailwind .schedule-overview .overview-toolbar .e-toolbar {
            border: 1px solid #e5e7eb;
        }

        .tailwind-dark .schedule-overview .overview-toolbar .e-toolbar {
            border: 1px solid #4b5563;
        }

        .tailwind .schedule-overview .overview-toolbar .overview-toolbar-settings,
        .tailwind .schedule-overview .overview-content .right-panel .control-panel {
            background-color: #f3f4f6;
            border-color: #e5e7eb;
            box-shadow: none;
        }

        .tailwind-dark .schedule-overview .overview-toolbar .overview-toolbar-settings,
        .tailwind-dark .schedule-overview .overview-content .right-panel .control-panel {
            background-color: #374151;
            border-color: #4b5563;
            box-shadow: none;
            color: #fff;
        }

        .highcontrast .schedule-overview .overview-toolbar .e-toolbar,
        .highcontrast .schedule-overview .overview-toolbar .e-toolbar .e-toolbar-items .e-toolbar-item.e-separator,
        .highcontrast .schedule-overview .overview-toolbar .e-toolbar .e-hscroll .e-scroll-nav.e-scroll-left-nav,
        .highcontrast .schedule-overview .overview-toolbar .e-toolbar .e-hscroll .e-scroll-nav.e-scroll-right-nav {
            border-color: #969696;
        }

        .material .schedule-overview .overview-toolbar .overview-toolbar-settings,
        .material .schedule-overview .overview-content .right-panel .control-panel {
            background-color: #fafafa;
            text-transform: capitalize;
            box-shadow: none;
        }

        .material-dark .schedule-overview .overview-toolbar .overview-toolbar-settings,
        .material-dark .schedule-overview .overview-content .right-panel .control-panel {
            background-color: #2a2a2a;
            color: #ffff;
        }

        .fabric .schedule-overview .overview-toolbar .overview-toolbar-settings,
        .fabric .schedule-overview .overview-content .right-panel .control-panel {
            background-color: #ffffff;
        }

        .fabric-dark .schedule-overview .overview-toolbar .overview-toolbar-settings,
        .fabric-dark .schedule-overview .overview-content .right-panel .control-panel {
            background-color: #333232;
            color: #fff;
        }

        .bootstrap .schedule-overview .overview-toolbar .overview-toolbar-settings,
        .bootstrap .schedule-overview .overview-content .right-panel .control-panel {
            background-color: #f8f8f8;
        }

        .bootstrap5 .schedule-overview .overview-toolbar .overview-toolbar-settings,
        .bootstrap5 .schedule-overview .overview-content .right-panel .control-panel {
            background-color: #f8f9fa;
            color: #212529;
            font-weight: 400;
        }

        .bootstrap5-dark .schedule-overview .overview-toolbar .overview-toolbar-settings,
        .bootstrap5-dark .schedule-overview .overview-content .right-panel .control-panel {
            background-color: #343a40;
            color: #fff;
            font-weight: 400;
        }

        .bootstrap-dark .schedule-overview .overview-toolbar .overview-toolbar-settings,
        .bootstrap-dark .schedule-overview .overview-content .right-panel .control-panel {
            background-color: #2a2a2a;
            color: #fff;
        }


        .highcontrast .schedule-overview .overview-toolbar .overview-toolbar-settings,
        .highcontrast .schedule-overview .overview-content .right-panel .control-panel {
            background-color: #000000;
            border-color: #969696;
            color: #ffffff;
        }

        .highcontrast .schedule-overview .overview-header .overview-titlebar .title-bar-btn,
        .highcontrast .schedule-overview .overview-header .overview-titlebar .calendar-import .e-file-select-wrap .e-css.e-btn,
        .highcontrast .schedule-overview .overview-header .overview-titlebar .e-dropdown-btn.e-btn {
            color: black;
        }

        .schedule-overview .overview-header {
            border: 1px solid #007bff;
        }

            .schedule-overview .overview-header .overview-titlebar {
                background-color: #007bff;
                color: #ffffff;
                height: 40px;
                line-height: 40px;
                width: 100%;
                font-size: 12px;
                padding: 0 10px;
                font-family: inherit;
                display: flex;
                justify-content: space-between;
            }

                .schedule-overview .overview-header .overview-titlebar .right-panel {
                    display: flex;
                    justify-content: space-between;
                }

                .schedule-overview .overview-header .overview-titlebar .e-upload.calendar-import {
                    line-height: 40px;
                }

        .bootstrap5 .schedule-overview .overview-header .overview-titlebar .e-upload.calendar-import,
        .bootstrap5 .schedule-overview .overview-header .overview-titlebar .calendar-export,
        .bootstrap5-dark .schedule-overview .overview-header .overview-titlebar .e-upload.calendar-import,
        .bootstrap5-dark .schedule-overview .overview-header .overview-titlebar .calendar-export,
        .fabric .schedule-overview .overview-header .overview-titlebar .e-upload.calendar-import,
        .fabric .schedule-overview .overview-header .overview-titlebar .calendar-export,
        .fabric-dark .schedule-overview .overview-header .overview-titlebar .e-upload.calendar-import,
        .fabric-dark .schedule-overview .overview-header .overview-titlebar .calendar-export,
        .highcontrast .schedule-overview .overview-header .overview-titlebar .calendar-export,
        .highcontrast .schedule-overview .overview-header .overview-titlebar .e-upload.calendar-import {
            line-height: 1.5em;
        }


                    .schedule-overview .overview-header .overview-titlebar .e-upload.calendar-import button,
                    .schedule-overview .overview-header .overview-titlebar .e-upload.calendar-import button:focus,
                    .schedule-overview .overview-header .overview-titlebar .e-upload.calendar-import button:hover {
                        background-color: transparent;
                        border-color: transparent;
                        box-shadow: none;
                        color: inherit;
                        font-size: 12px;
                        height: 40px;
                        text-transform: capitalize;
                    }

                .schedule-overview .overview-header .overview-titlebar .title-bar-btn,
                .schedule-overview .overview-header .overview-titlebar .title-bar-btn:hover,
                .schedule-overview .overview-header .overview-titlebar .title-bar-btn:focus,
                .schedule-overview .overview-header .overview-titlebar .e-dropdown-btn,
                .schedule-overview .overview-header .overview-titlebar .e-dropdown-btn.e-btn {
                    background: transparent;
                    box-shadow: none;
                    font-family: inherit;
                    border-color: transparent;
                    border-radius: 2px;
                    color: inherit;
                    font-size: 12px;
                    text-transform: capitalize;
                    height: 40px;
                    font-weight: 400;
                }

                .schedule-overview .overview-header .overview-titlebar .e-btn:not([disabled]):focus {
                    background-color: rgba(255, 255, 255, 0.4) !important;
                }

        .schedule-overview .overview-toolbar {
            display: flex;
            height: 70px;
        }

            .schedule-overview .overview-toolbar .e-toolbar {
                border-radius: 0;
            }

                .schedule-overview .overview-toolbar .e-toolbar .e-toolbar-item .e-tbar-btn.e-tbtn-txt {
                    display: inline-grid;
                }

                .schedule-overview .overview-toolbar .e-toolbar .e-toolbar-item.e-template {
                    margin: 0 5px;
                }

            .schedule-overview .overview-toolbar .overview-toolbar-settings {
                border-radius: 0;
                background-color: #f8f9fa;
                border-color: rgba(0, 0, 0, 0.15);
                border-left-width: 0;
                border-top-width: 0;
                box-shadow: none;
                color: #495057;
                height: 72px;
                line-height: 1.6;
                outline: none;
                text-transform: capitalize;
                width: 100%;
            }

        .material .schedule-overview .overview-toolbar .overview-toolbar-settings:focus {
            background-color: #0000001f;
        }

        .fabric .schedule-overview .overview-toolbar .overview-toolbar-settings:focus {
            background-color: #f4f4f4;
        }

        .bootstrap .schedule-overview .overview-toolbar .overview-toolbar-settings:focus {
            background-color: rgb(230, 230, 230);
        }

        .bootstrap4 .schedule-overview .overview-toolbar .overview-toolbar-settings:focus,
        .bootstrap5 .schedule-overview .overview-toolbar .overview-toolbar-settings:focus {
            background-color: #5c636a;
            color: #fff;
        }

        .tailwind .schedule-overview .overview-toolbar .overview-toolbar-settings:focus {
            background-color: #e5e7eb;
        }

        .highcontrast .schedule-overview .overview-toolbar .overview-toolbar-settings:focus {
            background-color: rgb(104, 87, 8);
        }

        .material-dark .schedule-overview .overview-toolbar .overview-toolbar-settings:focus {
            background-color: #ffffff1a;
        }

        .fabric-dark .schedule-overview .overview-toolbar .overview-toolbar-settings:focus {
            background-color: rgb(65, 64, 64);
        }

        .bootstrap-dark .schedule-overview .overview-toolbar .overview-toolbar-settings:focus {
            background-color: rgb(49, 49, 49);
        }

        .tailwind-dark .schedule-overview .overview-toolbar .overview-toolbar-settings:focus {
            background-color: #4b5563;
        }

        .bootstrap5-dark .schedule-overview .overview-toolbar .overview-toolbar-settings:focus {
            background-color: #5c636a;
        }

        .bootstrap5 .schedule-overview .overview-toolbar .e-toolbar {
            border: 1px solid #dee2e6;
        }

        .schedule-overview .overview-content {
            border: 1px solid #00000026;
            border-top: 0;
            display: flex;
        }

            .schedule-overview .overview-content .left-panel {
                height: 600px;
                width: 100%;
            }

            .schedule-overview .overview-content .right-panel {
                display: block;
                height: 600px;
                transform: translateX(0%);
                transition: transform .5s ease, width 500ms;
                width: 500px;
            }

                .schedule-overview .overview-content .right-panel.hide {
                    display: none;
                    transform: translateX(100%);
                    transition: transform .5s ease, width 500ms;
                    width: 0;
                }

                .schedule-overview .overview-content .right-panel .control-panel {
                    background: #f8f9fa;
                    border-left: 1px solid #00000026;
                    font-size: 14px;
                    height: 100%;
                    overflow: auto;
                    padding: 15px;
                    width: 100%;
                }

        .tailwind-dark .schedule-overview .overview-content .right-panel .control-panel {
            background: #374151;
        }

        .schedule-overview .overview-content .right-panel .control-panel .col-row {
            display: flex;
            flex-wrap: wrap;
        }

        .schedule-overview .overview-content .right-panel .control-panel label {
            font-weight: 500;
        }

        .schedule-overview .overview-content .right-panel .control-panel .col-left {
            flex: 0 0 41.666667%;
            max-width: 41.666667%;
            margin-bottom: 1rem;
        }

        .schedule-overview .overview-content .right-panel .control-panel .col-right {
            flex: 0 0 58.333333%;
            max-width: 58.333333%;
            margin-bottom: 1rem;
        }

        .schedule-overview .overview-scheduler {
            height: 100%;
            padding: 10px;
            width: 100%;
        }

        .schedule-overview .e-schedule .e-vertical-view .e-header-cells {
            text-align: center !important;
        }

        .schedule-overview .e-schedule .date-text {
            font-size: 14px;
        }

        .schedule-overview .e-schedule.e-device .date-text {
            font-size: 12px;
        }

        .schedule-overview .e-schedule .weather-image {
            width: 20px;
            height: 20px;
            background-position: center center;
            background-repeat: no-repeat;
            background-size: cover;
        }

        .schedule-overview .e-schedule .weather-text {
            font-size: 11px;
        }

        .schedule-overview .e-schedule-toolbar .e-views,
        .schedule-overview .e-schedule-toolbar .e-schedule-seperator,
        .schedule-workweek.e-multi-select-list-wrapper.e-checkbox .e-filter-parent,
        .schedule-resource.e-multi-select-list-wrapper.e-checkbox .e-filter-parent {
            display: none;
        }

        .schedule-overview .e-timeline-view .e-resource-left-td,
        .schedule-overview .e-timeline-month-view .e-resource-left-td {
            width: 120px;
        }

        .schedule-resource.e-multi-select-list-wrapper.e-checkbox .e-list-parent:first-child li:first-child {
            background-image: none;
            opacity: .5;
            pointer-events: none;
            user-select: none;
        }

        .schedule-overview .quick-info-header {
            background-color: white;
            padding: 8px 18px;
        }

        .tailwind-dark .schedule-overview .quick-info-header {
            background-color: #374151;
        }

        .bootstrap5-dark .schedule-overview .quick-info-header {
            background-color: transparent;
        }

        .bootstrap-dark .schedule-overview .quick-info-header {
            background-color: #1a1a1a;
        }

        .fabric-dark .schedule-overview .quick-info-header {
            background-color: #201f1f;
        }

        .material-dark .schedule-overview .quick-info-header {
            background-color: #424242;
        }

        .highcontrast .schedule-overview .quick-info-header {
            background-color: #000000;
        }

        .schedule-overview .quick-info-header-content {
            justify-content: flex-end;
            display: flex;
            flex-direction: column;
            padding: 5px 10px 5px;
        }

        .tailwind-dark .schedule-overview .quick-info-header-content,
        .bootstrap-dark .schedule-overview .quick-info-header-content,
        .bootstrap5-dark .schedule-overview .quick-info-header-content,
        .fabric-dark .schedule-overview .quick-info-header-content,
        .material-dark .schedule-overview .quick-info-header-content,
        .highcontrast .schedule-overview .quick-info-header-content {
            color: #fff !important;
        }

        .schedule-overview .quick-info-title {
            font-weight: 500;
            font-size: 16px;
            letter-spacing: 0.48px;
            height: 22px;
        }

        .schedule-overview .duration-text {
            font-size: 11px;
            letter-spacing: 0.33px;
            height: 14px;
        }

        .schedule-overview .content-area {
            padding: 10px;
            width: auto;
            margin: unset;
        }

        .schedule-overview .event-content {
            height: 90px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            padding: 0 15px;
        }

        .schedule-overview .meeting-type-wrap,
        .schedule-overview .meeting-subject-wrap,
        .schedule-overview .notes-wrap {
            font-size: 11px;
            color: #666;
            letter-spacing: 0.33px;
            height: 24px;
            padding: 5px;
        }

        .schedule-overview .event-content div label {
            display: inline-block;
            min-width: 45px;
            color: #666;
        }

        .schedule-overview .event-content div span {
            font-size: 11px;
            color: #151515;
            letter-spacing: 0.33px;
            line-height: 14px;
            padding-left: 8px;
        }

        .tailwind-dark .schedule-overview .event-content div label,
        .bootstrap-dark .schedule-overview .event-content div label,
        .bootstrap5-dark .schedule-overview .event-content div label,
        .fabric-dark .schedule-overview .event-content div label,
        .material-dark .schedule-overview .event-content div label,
        .highcontrast .schedule-overview .event-content div label,
        .tailwind-dark .schedule-overview .event-content div span,
        .bootstrap-dark .schedule-overview .event-content div span,
        .bootstrap5-dark .schedule-overview .event-content div span,
        .fabric-dark .schedule-overview .event-content div span,
        .material-dark .schedule-overview .event-content div span,
        .highcontrast .schedule-overview .event-content div span {
            color: #fff;
        }

        .schedule-overview .cell-footer.e-btn {
            background-color: #ffffff;
            border-color: #878787;
            color: #878787;
        }

        .schedule-overview .cell-footer {
            padding-top: 10px;
        }

        .schedule-overview .e-quick-popup-wrapper .e-cell-popup .e-popup-content {
            padding: 0 14px;
        }

        .schedule-overview .e-quick-popup-wrapper .e-event-popup .e-popup-footer {
            display: block;
        }

        .schedule-overview .e-quick-popup-wrapper .e-popup-footer button:first-child {
            margin-right: 5px;
        }

        .schedule-overview .calendar-import.e-upload {
            border: 0;
            padding-left: 0 !important;
        }

            .schedule-overview .calendar-import.e-upload .e-file-select-wrap {
                padding: 0
            }

                .schedule-overview .calendar-import.e-upload .e-file-select-wrap .e-file-drop,
                .calendar-import .e-upload-files {
                    display: none;
                }

        .quick-info-header {
            background-color: white;
            padding: 8px 18px;
        }

        .quick-info-header-content {
            justify-content: flex-end;
            display: flex;
            flex-direction: column;
            padding: 5px 10px 5px;
        }

        .quick-info-title {
            font-weight: 500;
            font-size: 16px;
            letter-spacing: 0.48px;
            height: 22px;
        }

        .duration-text {
            font-size: 11px;
            letter-spacing: 0.33px;
            height: 14px;
        }

        .content-area {
            padding: 10px;
            width: 100%;
        }

        .event-content {
            height: 90px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            padding: 0 15px;
        }

        .meeting-type-wrap,
        .meeting-subject-wrap,
        .notes-wrap {
            font-size: 11px;
            color: #666;
            letter-spacing: 0.33px;
            height: 24px;
            padding: 5px;
        }

        .event-content div label {
            display: inline-block;
            min-width: 45px;
            color: #666;
        }

        .event-content div span {
            font-size: 11px;
            color: #151515;
            letter-spacing: 0.33px;
            line-height: 14px;
            padding-left: 8px;
        }

        .cell-footer.e-btn {
            background-color: #ffffff;
            border-color: #878787;
            color: #878787;
        }

        .cell-footer {
            padding-top: 10px;
        }

        .e-quick-popup-wrapper .e-cell-popup .e-popup-content {
            padding: 0 14px;
        }

        .e-quick-popup-wrapper .e-event-popup .e-popup-footer {
            display: block;
        }

        .e-quick-popup-wrapper .e-popup-footer button:first-child {
            margin-right: 5px;
        }

        .e-bigger .schedule-context-menu ul .e-menu-item .e-menu-icon {
            font-size: 14px;
        }

        .schedule-context-menu ul .e-menu-item .e-menu-icon {
            font-size: 12px;
        }

        .schedule-overview.e-schedule .e-vertical-view .e-header-cells,
        .schedule-overview.e-schedule .e-timeline-month-view .e-header-cells {
            padding: 0;
            text-align: center !important;
        }

        .schedule-overview.e-schedule .date-text {
            font-size: 14px;
        }

        .schedule-overview.e-schedule.e-device .date-text {
            font-size: 12px;
        }

        .schedule-overview.e-schedule .weather-image {
            width: 20px;
            height: 20px;
            background-position: center center;
            background-repeat: no-repeat;
            background-size: cover;
        }

        .schedule-overview.e-schedule .weather-text {
            font-size: 11px;
        }

        .schedule-overview.e-schedule .e-month-view .weather-image {
            float: right;
            margin: -20px 2px 0 0;
            width: 20px;
            height: 20px;
        }

        .schedule-overview .overview-toolbar .e-toolbar .e-toolbar-item .e-tbar-btn.e-btn {
            height: 50px !important;
        }

        .schedule-overview .overview-toolbar .e-toolbar .e-toolbar-item:not(.e-separator) {
            padding: 3.5px;
        }

        .schedule-overview .overview-toolbar .e-toolbar .e-toolbar-item .e-tbar-btn {
            padding: 1.5px;
        }

        .e-bigger .schedule-overview .overview-toolbar .e-toolbar .e-toolbar-item:not(.e-separator) {
            padding: 5px;
        }

        .e-bigger .schedule-overview .overview-toolbar .e-toolbar .e-toolbar-item .e-tbar-btn {
            padding: 6px;
        }

        .bootstrap:not(.e-bigger) .schedule-overview .overview-toolbar .e-toolbar .e-toolbar-item .e-tbar-btn.e-btn:hover,
        .bootstrap-dark:not(.e-bigger) .schedule-overview .overview-toolbar .e-toolbar .e-toolbar-item .e-tbar-btn.e-btn:hover,
        .bootstrap4:not(.e-bigger) .schedule-overview .overview-toolbar .e-toolbar .e-toolbar-item .e-tbar-btn.e-btn:hover {
            border-width: 1.5px;
            padding: unset !important;
        }

        .schedule-overview .overview-toolbar .e-toolbar .e-toolbar-item .e-btn.e-tbar-btn .e-icons.e-btn-icon,
        .schedule-overview .overview-toolbar .e-toolbar .e-toolbar-item .e-btn.e-tbar-btn .e-tbar-btn-text {
            line-height: 23px !important;
            min-height: 23px !important;
            padding: 0px !important;
        }

        .schedule-overview .overview-toolbar .e-toolbar .e-toolbar-item.e-template .icon-child {
            height: 23px !important;
        }

        .schedule-overview .overview-toolbar .e-toolbar .e-toolbar-item.e-template .text-child {
            line-height: 23px !important;
        }

        .tailwind .schedule-overview.e-schedule .e-left-indent .e-header-cells,
        .tailwind-dark .schedule-overview.e-schedule .e-left-indent .e-header-cells {
            height: 66px;
        }

        .tailwind .e-more-popup-wrapper .e-more-event-close .e-btn-icon,
        .tailwind-dark .e-more-popup-wrapper .e-more-event-close .e-btn-icon {
            margin-top: 0px;
        }

        .bootstrap-dark .schedule-overview .overview-content {
            border: 1px solid #505050;
        }

        .bootstrap5-dark .schedule-overview .overview-content {
            border: 1px solid #444c54;
        }

        .material-dark .schedule-overview .overview-content {
            border: 1px solid #616161;
        }

        .bootstrap5 .schedule-overview .overview-toolbar .overview-toolbar-settings {
            border-color: #dee2e6;
        }

        .bootstrap-dark .schedule-overview .overview-toolbar .overview-toolbar-settings {
            border-color: #505050;
        }

        .material-dark .schedule-overview .overview-toolbar .overview-toolbar-settings {
            border-color: #616161;
        }

        .bootstrap-dark .schedule-overview .overview-header .overview-titlebar .title-bar-btn,
        .material-dark .schedule-overview .overview-header .overview-titlebar .title-bar-btn,
        .material .schedule-overview .overview-header .overview-titlebar .title-bar-btn {
            box-shadow: none;
        }
    </style>
    @*custom code end*@
    <script id="header-template" type="text/x-template">
        <div class="quick-info-header">
            <div class="quick-info-header-content" style='${getHeaderStyles(data)}'>
                <div class="quick-info-title">${if (elementType == "cell")}Add Appointment${else}Appointment Details${/if}</div>
                <div class="duration-text">${getHeaderDetails(data)}</div>
            </div>
        </div>
    </script>

    <script id="content-template" type="text/x-template">
        <div class="quick-info-content">
            ${if (elementType == "cell")}
            <div class="e-cell-content">
                <div class="content-area">
                    <input id="title" placeholder="Title" />
                </div>
                <div class="content-area">
                    <input id="eventType" placeholder="Choose Type" />
                </div>
                <div class="content-area">
                    <input id="notes" placeholder="Notes" />
                </div>
            </div>
            ${else}
            <div class="event-content">
                <div class="meeting-type-wrap">
                    <label>Subject</label>:
                    <span>${Subject}</span>
                </div>
                <div class="meeting-subject-wrap">
                    <label>Type</label>:
                    <span>${getEventType(data)}</span>
                </div>
                <div class="notes-wrap">
                    <label>Notes</label>:
                    <span>${Description}</span>
                </div>
            </div>
            ${/if}
        </div>
    </script>

    <script id="footer-template" type="text/x-template">
        <div class="quick-info-footer">
            ${if (elementType == "cell")}
            <div class="cell-footer">
                <button id="more-details">More Details</button>
                <button id="add">Add</button>
            </div>
            ${else}
            <div class="event-footer">
                <button id="delete">Delete</button>
                <button id="more-details">More Details</button>
            </div>
            ${/if}
        </div>
    </script>

    <script type="text/javascript">
        var selectedTarget;
        var isTimelineView = false;
        var intlObj = new ej.base.Internationalization();

        window.getDateHeaderText = function (value) {
            return intlObj.formatDate(value, { skeleton: 'Ed' });
        };

        window.getWeather = function (date) {
            switch (date.getDay()) {
                case 0:
                    return '<img class="weather-image" src="@Url.Content("~/Content/schedule/images/weather-clear.svg")"/><div class="weather-text">25&deg;C</div>';
                case 1:
                    return '<img class="weather-image" src="@Url.Content("~/Content/schedule/images/weather-clouds.svg")"/><div class="weather-text">18&deg;C</div>';
                case 2:
                    return '<img class="weather-image" src="@Url.Content("~/Content/schedule/images/weather-rain.svg")"/><div class="weather-text">10&deg;C</div>';
                case 3:
                    return '<img class="weather-image" src="@Url.Content("~/Content/schedule/images/weather-clouds.svg")"/><div class="weather-text">16&deg;C</div>';
                case 4:
                    return '<img class="weather-image" src="@Url.Content("~/Content/schedule/images/weather-rain.svg")"/><div class="weather-text">8&deg;C</div>';
                case 5:
                    return '<img class="weather-image" src="@Url.Content("~/Content/schedule/images/weather-clear.svg")"/><div class="weather-text">27&deg;C</div>';
                case 6:
                    return '<img class="weather-image" src="@Url.Content("~/Content/schedule/images/weather-clouds.svg")"/><div class="weather-text">17&deg;C</div>';
                default:
                    return null;
            }
        };

        window.getResourceData = function (data) {
            var scheduleObj = document.getElementById('scheduler').ej2_instances[0];
            var resources = scheduleObj.getResourceCollections().slice(-1)[0];
            var resourceData = resources.dataSource.filter(function (resource) { return resource.CalendarId === data.CalendarId; })[0];
            return resourceData;
        };

        window.getHeaderDetails = function (data) {
            return intlObj.formatDate(data.StartTime, { type: 'date', skeleton: 'full' }) + ' (' + intlObj.formatDate(data.StartTime, { skeleton: 'hm' }) + ' - ' + intlObj.formatDate(data.EndTime, { skeleton: 'hm' }) + ')';
        };

        window.getHeaderStyles = function (data) {
            if (data.elementType === 'event') {
                var resourceData = window.getResourceData(data);
                var calendarColor = '#3f51b5';
                if (resourceData) {
                    calendarColor = (resourceData.CalendarColor).toString();
                }
                return 'background:' + calendarColor + '; color: #FFFFFF;';
            }
            else {
                return 'align-items: center; color: #919191;';
            }
        };

        window.getEventType = function (data) {
            var resourceData = window.getResourceData(data);
            var calendarName = '';
            if (resourceData) {
                calendarName = resourceData.CalendarName.toString();
            }
            return calendarName;
        };

        var buttonClickActions = function (e) {
            var scheduleObj = document.getElementById('scheduler').ej2_instances[0];
            var popupElement = scheduleObj.element.querySelector('.e-quick-popup-wrapper');
            var getSlotData = function () {
                var cellDetails = scheduleObj.getCellDetails(scheduleObj.getSelectedElements());
                if (ej.base.isNullOrUndefined(cellDetails)) {
                    cellDetails = scheduleObj.getCellDetails(scheduleObj.activeCellsData.element);
                }
                var subject = popupElement.querySelector('#title').ej2_instances[0].value;
                var notes = popupElement.querySelector('#notes').ej2_instances[0].value;
                var eventObj = {};
                eventObj.Id = scheduleObj.getEventMaxID();
                eventObj.Subject = ej.base.isNullOrUndefined(subject) ? 'Add title' : subject;
                eventObj.StartTime = new Date(+cellDetails.startTime);
                eventObj.EndTime = new Date(+cellDetails.endTime);
                eventObj.IsAllDay = cellDetails.isAllDay;
                eventObj.Description = ej.base.isNullOrUndefined(notes) ? 'Add notes' : notes;
                eventObj.CalendarId = popupElement.querySelector('#eventType').ej2_instances[0].value;
                return eventObj;
            };
            if (e.target.id === 'add') {
                var addObj = getSlotData();
                scheduleObj.addEvent(addObj);
            }
            else if (e.target.id === 'delete') {
                var currentAction = void 0;
                if (scheduleObj.activeEventData.event.RecurrenceRule) {
                    currentAction = 'DeleteOccurrence';
                }
                scheduleObj.deleteEvent(scheduleObj.activeEventData.event, currentAction);
            }
            else {
                var isCellPopup = popupElement.firstElementChild.classList.contains('e-cell-popup');
                var eventDetails = isCellPopup ? getSlotData() : scheduleObj.activeEventData.event;
                var action = isCellPopup ? 'Add' : 'Save';
                if (eventDetails.RecurrenceRule) {
                    action = 'EditOccurrence';
                }
                scheduleObj.openEditor(eventDetails, action, true);
            }
            scheduleObj.closeQuickInfoPopup();
        };

        document.getElementById("printBtn").addEventListener("click", function () {
            var scheduleObj = document.getElementById('scheduler').ej2_instances[0];
            scheduleObj.print();
        });

        function onContextMenuBeforeOpen(args) {
            var newEventElement = document.querySelector('.e-new-event');
            if (newEventElement) {
                ej.base.remove(newEventElement);
                ej.base.removeClass([document.querySelector('.e-selected-cell')], 'e-selected-cell');
            }
            var targetElement = args.event.target;
            if (ej.base.closest(targetElement, '.e-contextmenu')) {
                return;
            }
            selectedTarget = ej.base.closest(targetElement, '.e-appointment,.e-work-cells,' +
                '.e-vertical-view .e-date-header-wrap .e-all-day-cells,.e-vertical-view .e-date-header-wrap .e-header-cells');
            if (ej.base.isNullOrUndefined(selectedTarget)) {
                args.cancel = true;
                return;
            }
            if (selectedTarget.classList.contains('e-appointment')) {
                var scheduleObj = document.querySelector(".e-schedule").ej2_instances[0];
                var eventObj = scheduleObj.getEventDetails(selectedTarget);
                if (eventObj.RecurrenceRule) {
                    this.showItems(['EditRecurrenceEvent', 'DeleteRecurrenceEvent'], true);
                    this.hideItems(['Add', 'AddRecurrence', 'Today', 'Save', 'Delete'], true);
                } else {
                    this.showItems(['Save', 'Delete'], true);
                    this.hideItems(['Add', 'AddRecurrence', 'Today', 'EditRecurrenceEvent', 'DeleteRecurrenceEvent'], true);
                }
                return;
            }
            this.hideItems(['Save', 'Delete', 'EditRecurrenceEvent', 'DeleteRecurrenceEvent'], true);
            this.showItems(['Add', 'AddRecurrence', 'Today'], true);
        }

        function onMenuItemSelect(args) {
            var scheduleObj = document.querySelector(".e-schedule").ej2_instances[0];
            var selectedMenuItem = args.item.id;
            var eventObj;
            if (selectedTarget.classList.contains('e-appointment')) {
                eventObj = scheduleObj.getEventDetails(selectedTarget);
            }
            switch (selectedMenuItem) {
                case 'Today':
                    scheduleObj.selectedDate = new Date();
                    break;
                case 'Add':
                case 'AddRecurrence':
                    var selectedCells = scheduleObj.getSelectedElements();
                    var activeCellsData = scheduleObj.getCellDetails(selectedCells.length > 0 ? selectedCells : selectedTarget);
                    if (selectedMenuItem === 'Add') {
                        scheduleObj.openEditor(activeCellsData, 'Add');
                    } else {
                        scheduleObj.openEditor(activeCellsData, 'Add', null, 1);
                    }
                    break;
                case 'Save':
                case 'EditOccurrence':
                case 'EditSeries':
                    if (selectedMenuItem === 'EditSeries') {
                        eventObj = new ej.data.DataManager(scheduleObj.eventsData).executeLocal(new ej.data.Query().
                            where(scheduleObj.eventFields.id, 'equal', eventObj[scheduleObj.eventFields.recurrenceID]))[0];
                    }
                    scheduleObj.openEditor(eventObj, selectedMenuItem);
                    break;
                case 'Delete':
                    scheduleObj.deleteEvent(eventObj);
                    break;
                case 'DeleteOccurrence':
                case 'DeleteSeries':
                    scheduleObj.deleteEvent(eventObj, selectedMenuItem);
                    break;
            }
        }

        function onSelected(args) {
            var scheduleObj = document.getElementById('scheduler').ej2_instances[0];
            scheduleObj.importICalendar(args.event.target.files[0]);
        }

        function onExportItemSelect(args) {
            var scheduleObj = document.getElementById('scheduler').ej2_instances[0];
            if (args.item.text === 'Excel') {
                var exportDatas = [];
                var eventCollection = scheduleObj.getEvents();
                var resourceCollection = scheduleObj.getResourceCollections();
                var resourceData = resourceCollection[0].dataSource;
                for (var i = 0; i < resourceData.length; i++) {
                    var resource = resourceData[i];
                    var data = eventCollection.filter(function (e) { return e.CalendarId === resource.CalendarId; });
                    exportDatas = exportDatas.concat(data);
                }
                scheduleObj.exportToExcel({
                    exportType: 'xlsx',
                    customData: exportDatas,
                    fields: ['Id', 'Subject', 'StartTime', 'EndTime', 'CalendarId']
                });
            }
            else {
                scheduleObj.exportToICalendar();
            }
        }

        function onToolbarItemClick(args) {
            var scheduleObj = document.getElementById('scheduler').ej2_instances[0];
            switch (args.item.text) {
                case 'Day':
                    scheduleObj.currentView = isTimelineView ? 'TimelineDay' : 'Day';
                    break;
                case 'Week':
                    scheduleObj.currentView = isTimelineView ? 'TimelineWeek' : 'Week';
                    break;
                case 'WorkWeek':
                    scheduleObj.currentView = isTimelineView ? 'TimelineWorkWeek' : 'WorkWeek';
                    break;
                case 'Month':
                    scheduleObj.currentView = isTimelineView ? 'TimelineMonth' : 'Month';
                    break;
                case 'Year':
                    scheduleObj.currentView = isTimelineView ? 'TimelineYear' : 'Year';
                    break;
                case 'Agenda':
                    scheduleObj.currentView = 'Agenda';
                    break;
                case 'New Event':
                    var date = scheduleObj.selectedDate;
                    var eventData = {
                        Id: scheduleObj.getEventMaxID(),
                        Subject: '',
                        StartTime: new Date(date.getFullYear(), date.getMonth(), date.getDate(), new Date().getHours(), 0, 0),
                        EndTime: new Date(date.getFullYear(), date.getMonth(), date.getDate(), new Date().getHours() + 1, 0, 0),
                        Location: '',
                        Description: '',
                        IsAllDay: false,
                        CalendarId: 1
                    };
                    scheduleObj.openEditor(eventData, 'Add', true);
                    break;
                case 'New Recurring Event':
                    var dates = scheduleObj.selectedDate;
                    var recEventData = {
                        Id: scheduleObj.getEventMaxID(),
                        Subject: '',
                        StartTime: new Date(dates.getFullYear(), dates.getMonth(), dates.getDate(), new Date().getHours(), 0, 0),
                        EndTime: new Date(dates.getFullYear(), dates.getMonth(), dates.getDate(), new Date().getHours() + 1, 0, 0),
                        Location: '',
                        Description: '',
                        IsAllDay: false,
                        CalendarId: 1
                    };
                    scheduleObj.openEditor(recEventData, 'Add', true, 1);
                    break;
            }
        }

        function updateLiveTime() {
            var scheduleObj = document.getElementById('scheduler').ej2_instances;
            var scheduleTimezone = scheduleObj.length > 0 ? scheduleObj[0].timezone : 'Etc/GMT';
            var timeBtn = document.querySelector('.schedule-overview #timeBtn');
            if (timeBtn) {
                timeBtn.innerHTML = '<span class="e-btn-icon e-icons e-clock e-icon-left"></span>' + new Date().toLocaleTimeString('en-US', { timeZone: scheduleTimezone });
            }
        }

        function onToolbarCreated() {
            setInterval(function () { updateLiveTime(); }, 1000);
            var timelineView = new ej.buttons.Switch({
                checked: false,
                created: function () { this.element.setAttribute('tabindex', '-1'); },
                change: function (args) {
                    var scheduleObj = document.getElementById('scheduler').ej2_instances[0];
                    isTimelineView = args.checked;
                    switch (scheduleObj.currentView) {
                        case 'Day':
                        case 'TimelineDay':
                            scheduleObj.currentView = isTimelineView ? 'TimelineDay' : 'Day';
                            break;
                        case 'Week':
                        case 'TimelineWeek':
                            scheduleObj.currentView = isTimelineView ? 'TimelineWeek' : 'Week';
                            break;
                        case 'WorkWeek':
                        case 'TimelineWorkWeek':
                            scheduleObj.currentView = isTimelineView ? 'TimelineWorkWeek' : 'WorkWeek';
                            break;
                        case 'Month':
                        case 'TimelineMonth':
                            scheduleObj.currentView = isTimelineView ? 'TimelineMonth' : 'Month';
                            break;
                        case 'Year':
                        case 'TimelineYear':
                            scheduleObj.currentView = isTimelineView ? 'TimelineYear' : 'Year';
                            break;
                        case 'Agenda':
                            scheduleObj.currentView = 'Agenda';
                            break;
                    }
                }
            });
            timelineView.appendTo('#timeline_views');

            var multiDrag = new ej.buttons.Switch({
                checked: false,
                created: function () { this.element.setAttribute('tabindex', '-1'); },
                change: function (args) {
                    var scheduleObj = document.getElementById('scheduler').ej2_instances[0];
                    scheduleObj.allowMultiDrag = args.checked;
                }
            });
            multiDrag.appendTo('#multi_Drag');

            var grouping = new ej.buttons.Switch({
                checked: true,
                created: function () { this.element.setAttribute('tabindex', '-1'); },
                change: function (args) {
                    var scheduleObj = document.getElementById('scheduler').ej2_instances[0];
                    scheduleObj.group.resources = args.checked ? ['Calendars'] : [];
                }
            });
            grouping.appendTo('#grouping');

            var gridlines = new ej.buttons.Switch({
                checked: true,
                created: function () { this.element.setAttribute('tabindex', '-1'); },
                change: function (args) {
                    var scheduleObj = document.getElementById('scheduler').ej2_instances[0];
                    scheduleObj.timeScale.enable = args.checked;
                }
            });
            gridlines.appendTo('#gridlines');

            var rowAutoHeight = new ej.buttons.Switch({
                checked: false,
                created: function () { this.element.setAttribute('tabindex', '-1'); },
                change: function (args) {
                    var scheduleObj = document.getElementById('scheduler').ej2_instances[0];
                    scheduleObj.rowAutoHeight = args.checked;
                }
            });
            rowAutoHeight.appendTo('#row_auto_height');

            var tooltip = new ej.buttons.Switch({
                checked: false,
                created: function () { this.element.setAttribute('tabindex', '-1'); },
                change: function (args) {
                    var scheduleObj = document.getElementById('scheduler').ej2_instances[0];
                    scheduleObj.eventSettings.enableTooltip = args.checked;
                }
            });
            tooltip.appendTo('#tooltip');

            document.querySelector('#settingsBtn').onclick = function () {
                var settingsPanel = document.querySelector('.overview-content .right-panel');
                if (settingsPanel.classList.contains('hide')) {
                    ej.base.removeClass([settingsPanel], 'hide');
                    document.querySelector('#workWeekDays').ej2_instances[0].refresh();
                    document.querySelector('#resources').ej2_instances[0].refresh();
                }
                else {
                    ej.base.addClass([settingsPanel], 'hide');
                }
                var scheduleObj = document.getElementById('scheduler').ej2_instances[0];
                scheduleObj.refreshEvents();
            };
        }

        function onPopupOpen(args) {
            if (args.type === 'QuickInfo') {
                var titleObj = new ej.inputs.TextBox({ placeholder: 'Title' });
                titleObj.appendTo(args.element.querySelector('#title'));
                var eventTypeObj = new ej.dropdowns.DropDownList({
                    dataSource: [
                        { CalendarName: 'My Calendar', CalendarId: 1, CalendarColor: '#c43081' },
                        { CalendarName: 'Company', CalendarId: 2, CalendarColor: '#ff7f50' },
                        { CalendarName: 'Birthday', CalendarId: 3, CalendarColor: '#AF27CD' },
                        { CalendarName: 'Holiday', CalendarId: 4, CalendarColor: '#808000' }
                    ],
                    placeholder: 'Choose Type',
                    fields: { text: 'CalendarName', value: 'CalendarId' },
                    index: 0
                });
                eventTypeObj.appendTo(args.element.querySelector('#eventType'));
                var eventNotesObj = new ej.inputs.TextBox({ placeholder: 'Notes' });
                eventNotesObj.appendTo(args.element.querySelector('#notes'));
                var detailsBtn = args.element.querySelector('#more-details');
                if (detailsBtn) {
                    var moreObj = new ej.buttons.Button({
                        content: 'More Details', cssClass: 'e-flat',
                        isPrimary: args.element.firstElementChild.classList.contains('e-event-popup')
                    });
                    moreObj.appendTo(detailsBtn);
                    detailsBtn.onclick = function (e) { buttonClickActions(e); };
                }
                var addBtn = args.element.querySelector('#add');
                if (addBtn) {
                    var addBtnObj = new ej.buttons.Button({ content: 'Add', cssClass: 'e-flat', isPrimary: true });
                    addBtnObj.appendTo(addBtn);
                    addBtn.onclick = function (e) { buttonClickActions(e); };
                }
                var deleteBtn = args.element.querySelector('#delete');
                if (deleteBtn) {
                    var deleteBtnObj = new ej.buttons.Button({ content: 'Delete', cssClass: 'e-flat' });
                    deleteBtnObj.appendTo(deleteBtn);
                    deleteBtn.onclick = function (e) { buttonClickActions(e); };
                }
            }
        }

        function onWeekFirstDayChange(args) {
            var scheduleObj = document.getElementById('scheduler').ej2_instances[0];
            scheduleObj.firstDayOfWeek = parseInt(args.value, 10);
            scheduleObj.dataBind();
        }

        function onWeekDaysChange(args) {
            var scheduleObj = document.getElementById('scheduler').ej2_instances[0];
            var value = args.value.slice(0).map(Number).sort();
            scheduleObj.workDays = value.length === 0 ? [0] : value;
            scheduleObj.dataBind();
        }

        function onCalendarChange(args) {
            var scheduleObj = document.getElementById('scheduler').ej2_instances[0];
            var resourcePredicate;
            var Resourcevalue = args.value.slice(0).map(Number).sort();
            for (var i = 0, a = Resourcevalue; i < a.length; i++) {
                var value = a[i];
                if (resourcePredicate) {
                    resourcePredicate = resourcePredicate.or(new ej.data.Predicate('CalendarId', 'equal', value));
                }
                else {
                    resourcePredicate = new ej.data.Predicate('CalendarId', 'equal', value);
                }
            }
            scheduleObj.resources[0].query = resourcePredicate ? new ej.data.Query().where(resourcePredicate) :
                new ej.data.Query().where('CalendarId', 'equal', 1);
        }

        function onTimezoneChange(args) {
            var scheduleObj = document.getElementById('scheduler').ej2_instances[0];
            scheduleObj.timezone = args.value;
            updateLiveTime();
            document.querySelector('.schedule-overview #timezoneBtn').innerHTML =
                '<span class="e-btn-icon e-icons e-time-zone e-icon-left"></span>' + args.itemData.text;
        }

        function onDayStartHourChange(args) {
            var scheduleObj = document.getElementById('scheduler').ej2_instances[0];
            scheduleObj.startHour = new ej.base.Internationalization().formatDate(args.value, { skeleton: 'Hm' });
        }

        function onDayEndHourChange(args) {
            var scheduleObj = document.getElementById('scheduler').ej2_instances[0];
            scheduleObj.endHour = new ej.base.Internationalization().formatDate(args.value, { skeleton: 'Hm' });
        }

        function onWorkStartHourChange(args) {
            var scheduleObj = document.getElementById('scheduler').ej2_instances[0];
            scheduleObj.workHours.start = new ej.base.Internationalization().formatDate(args.value, { skeleton: 'Hm' });
        }

        function onWorkEndHourChange(args) {
            var scheduleObj = document.getElementById('scheduler').ej2_instances[0];
            scheduleObj.workHours.end = new ej.base.Internationalization().formatDate(args.value, { skeleton: 'Hm' });
        }

        function onSlotIntervalChange(args) {
            var scheduleObj = document.getElementById('scheduler').ej2_instances[0];
            scheduleObj.timeScale.interval = args.value;
        }

        function onSlotCountChange(args) {
            var scheduleObj = document.getElementById('scheduler').ej2_instances[0];
            scheduleObj.timeScale.slotCount = args.value;
        }

        function onTimeFormatChange(args) {
            var scheduleObj = document.getElementById('scheduler').ej2_instances[0];
            scheduleObj.timeFormat = args.value;
        }

        function onWeekNumberChange(args) {
            var scheduleObj = document.getElementById('scheduler').ej2_instances[0];
            if (args.value === 'Off') {
                scheduleObj.showWeekNumber = false;
            } else {
                scheduleObj.showWeekNumber = true;
                scheduleObj.weekRule = args.value;
            }
        }
    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>This <a href="https://www.syncfusion.com/aspnet-mvc-ui-controls/scheduler" target="_blank">ASP.NET MVC Scheduler example</a> demonstrates the overview of ASP.NET MVC Scheduler with its overall features. Use the toolbar buttons to play with Scheduler functionalities.</p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            The ASP.NET MVC Scheduler is a fully-features calendar component that is used to manage appointments with multiple resources.
            The data can be pulled from the <code>DataManager</code> component or <code>IEnumerable</code> of objects or Restful web services and bind the data fields using <code>EventSettings.Field</code>.
        </p>
        <p>
            In this demo, ASP.NET MVC Scheduler features such as Multiple views, Templates (Date Header, Quick Info), Resources, Grouping, Timezone, Timescale, etc... are used along with multiple resources.
        </p>
    </div>
}

@section Meta{
    <meta name="description" content="This ASP.NET MVC Scheduler example demonstrates the overview in ASP.NET MVC Scheduler Component. Explore here for more details." />
}

@section Title{
    <title>ASP.NET Core Schedule Overview Functionalities Example - Syncfusion Demos </title>
}

@section Header{
    <h1 class='sb-sample-text'>ASP.NET MVC Scheduler Example - Overview</h1>
}