@using Syncfusion.EJ2
@using EJ2MVCSampleBrowser.Models
@using Syncfusion.EJ2.PivotView
@section Meta{
                    <meta name="description" content="This example demonstrates the Show/Hide Totals in ASP.NET MVC Pivot Table control. Explore here for more details."/>
                }
@section ControlsSection{

    <div class="col-lg-9 control-section">
        <div class="content-wrapper">
            @Html.EJS().PivotView("pivotview").Width("100%").Height("500").DataSourceSettings(dataSourceSettings => dataSourceSettings.DataSource((IEnumerable<object>)ViewBag.Data).ExpandAll(false).EnableSorting(true).ShowGrandTotals(true).GrandTotalsPosition(GrandTotalsPosition.Bottom)
           .DrilledMembers(drilledmembers =>
           {
               drilledmembers.Name("Country").Items(ViewBag.drilledMembers).Add();
           })
           .FilterSettings(filterSettings =>
           {
               filterSettings.Name("Products").Items(ViewBag.filterMembers).Type(FilterType.Include).Add();
           })
           .FormatSettings(formatsettings => { formatsettings.Name("Amount").Format("C0").MaximumSignificantDigits(10).MinimumSignificantDigits(1).UseGrouping(true).Add(); })
           .Rows(rows => { rows.Name("Country").Add(); rows.Name("Products").Add(); })
           .Columns(columns => { columns.Name("Year").Add(); columns.Name("Order_Source").Caption("Order Source").Add(); })
           .Values(values =>
           {
               values.Name("In_Stock").Caption("In Stock").Add(); values.Name("Sold").Caption("Units Sold").Add();
               values.Name("Amount").Caption("Sold Amount").Add();
           })
           .Filters(filters =>
           {
               filters.Name("Product_Categories").Caption("Product Categories").Add();
           })).GridSettings(new PivotViewGridSettings { ColumnWidth = 140 }).Render()
        </div>
    </div>
    <div class="col-lg-3 property-section pivot-table-property-section">
        <table id="property" title="Properties" style="width: 100%;height:100%;" class="property-panel-table">
            <tbody>
                <tr>
                    <td>
                        <div style="font-weight: 600; font-size: 13px; white-space: nowrap">
                            Grand totals position
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div>
                            @Html.EJS().RadioButton("radio5").Label("Top").Name("position").Value("Top").Change("onChange1").Render()
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div>
                            @Html.EJS().RadioButton("radio6").Label("Bottom").Name("position").Value("Bottom").Checked(true).Change("onChange1").Render()
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div>
                            <div style="font-weight: 600; font-size: 13px; white-space: nowrap">
                                Hide grand totals
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div>
                            @Html.EJS().RadioButton("radio1").Label("Row").Name("Total").Value("Row").Change("onChange").Render()
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div>
                            @Html.EJS().RadioButton("radio2").Label("Column").Name("Total").Value("Column").Change("onChange").Render()
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div>
                            @Html.EJS().RadioButton("radio3").Label("Both").Name("Total").Value("Both").Change("onChange").Render()
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div>
                            @Html.EJS().RadioButton("radio4").Label("None").Name("Total").Value("None").Checked(true).Change("onChange").Render()
                        </div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div>
                            <div style="font-weight: 600; font-size: 13px; white-space: nowrap">
                                Hide sub-totals
                            </div>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td colspan="2">
                        <div>
                            <input type="text" tabindex="1" id='values' />
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <style>
        #pivotview {
            width: 100%;
            height: 100%;
        }

        .pivot-table-property-section {
            overflow: auto;
        }

        .pivot-table-property-section .property-panel-header {
            padding-bottom: 10px;
        }

        .pivot-table-property-section .e-multiselect {
            padding: 0;
        }
        
        .pivot-table-property-section  .property-panel-table td {
            width: auto;
        }

        .pivot-table-property-section  .property-panel-table div {
            padding-left: unset;
        }
        .sb-sample-content-area {
            min-height: 255px !important;
        }
        .control-section {
            min-height: 255px !important;
        }
    </style>
    <script>
        var fields = [
            { Name: 'Country' },
            { Name: 'Year' }
        ];
        var valuesddl = new ej.dropdowns.MultiSelect({
            dataSource: fields,
            mode: 'CheckBox',
            showDropDownIcon: true,
            showClearButton: false,
            enableSelectionOrder: false,
            fields: { text: 'Name' },
            placeholder: 'Select fields to hide its sub-totals',
            select: onSelected,
            removed: onRemoved,
            open: onOpen
        });
        valuesddl.appendTo('#values');

        function onRemoved(args) {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            for (var i = 0; i < pivotObj.dataSourceSettings.columns.length; i++) {
                if ((pivotObj.dataSourceSettings.columns[i].name || pivotObj.dataSourceSettings.columns[i].caption) === args.itemData.Name) {
                    pivotObj.dataSourceSettings.columns[i].showSubTotals = true;
                }
            }
            for (var i = 0; i < pivotObj.dataSourceSettings.rows.length; i++) {
                if ((pivotObj.dataSourceSettings.rows[i].name || pivotObj.dataSourceSettings.rows[i].caption) === args.itemData.Name) {
                    pivotObj.dataSourceSettings.rows[i].showSubTotals = true;
                }
            }
        }

        function onSelected(args) {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            for (var i = 0; i < pivotObj.dataSourceSettings.columns.length; i++) {
                if ((pivotObj.dataSourceSettings.columns[i].name || pivotObj.dataSourceSettings.columns[i].caption) === args.itemData.Name) {
                    pivotObj.dataSourceSettings.columns[i].showSubTotals = false;
                }
            }
            for (var i = 0; i < pivotObj.dataSourceSettings.rows.length; i++) {
                if ((pivotObj.dataSourceSettings.rows[i].name || pivotObj.dataSourceSettings.rows[i].caption) === args.itemData.Name) {
                    pivotObj.dataSourceSettings.rows[i].showSubTotals = false;
                }
            }
        }

        function onOpen(args) {
            args.popup.element.querySelector(".e-filter-parent").style.display = 'none';
        }

        function onChange(args) {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            if (args.value === 'None') {
                pivotObj.setProperties({ dataSourceSettings: { showGrandTotals: false } }, true);
                pivotObj.setProperties({ dataSourceSettings: { showRowGrandTotals: true } }, true);
                pivotObj.setProperties({ dataSourceSettings: { showColumnGrandTotals: true } }, true);
                pivotObj.dataSourceSettings.showGrandTotals = true;
            }
            else {
                pivotObj.setProperties({ dataSourceSettings: { showGrandTotals: true } }, true);
                pivotObj.setProperties({ dataSourceSettings: { showRowGrandTotals: true } }, true);
                pivotObj.setProperties({ dataSourceSettings: { showColumnGrandTotals: true } }, true);
                if (args.value === 'Column') {
                    pivotObj.dataSourceSettings.showColumnGrandTotals = false;
                } else if (args.value === 'Row') {
                    pivotObj.dataSourceSettings.showRowGrandTotals = false;
                } else if (args.value === 'Both') {
                    pivotObj.dataSourceSettings.showGrandTotals = false;
                }
            }
        }
        function onChange1(args) {
            var pivotObj = document.getElementById('pivotview').ej2_instances[0];
            if (args.value === 'Top') {
                pivotObj.setProperties({ dataSourceSettings: { grandTotalsPosition: 'Bottom' } }, true);
                pivotObj.dataSourceSettings.grandTotalsPosition = 'Top';
            }
            else if(args.value === 'Bottom') {
                pivotObj.setProperties({ dataSourceSettings: { grandTotalsPosition: 'Top' } }, true);
                pivotObj.dataSourceSettings.grandTotalsPosition = 'Bottom';
            }
        }
    </script>
}

@section PreScripts {
    <script>
        ej.base.enableRipple(false);
    </script>
}

@section ActionDescription{
   <div id="action-description">
       <p>This sample demonstrates showing and hiding grand totals and subtotals in rows, columns, or both at runtime. Also, end users can specify and hide subtotals of specific fields.</p>
    </div>
}

@section Description{
<div id="description">
    <p>
        In this sample, you can hide grand totals in row, column, or both using radio buttons available under the <b>Hide grand totals</b> category. To hide grand totals in both row and column, set the property <code>DataSourceSettings->ShowGrandTotals</code> as <b>false</b>. To hide the row and column grand totals separately, set the property <code>DataSourceSettings->ShowRowGrandTotals</code> and <code>DataSourceSettings->ShowColumnGrandTotals</code>as <b>false</b>.
    </p>
    <p>
        You can also, display the grand totals either at the top or bottom of the row and column axes using radio buttons available under the <b>Grand totals position</b> category. To display the grand totals at top, set the property <code>DataSourceSettings->GrandTotalsPosition</code> as <b>Top</b>. And, to display the grand totals at botton, set the property <code>DataSourceSettings->GrandTotalsPosition</code> as <b>Bottom</b>.
    </p>
    <p>
        Also, in this sample, you can hide subtotals for specific fields too. It can be achieved by selecting appropriate fields from the drop-down available under the <b>Hide sub-totals</b> category. To hide subtotals for a specific field, set the <code>ShowSubTotals</code> property as <b>false</b> inside the field definition.
    </p>
</div>
}

@section Title{
                    <title>ASP.NET MVC Pivot Table Show/Hide Totals Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Show/Hide Totals in ASP.NET MVC Pivot Table Control</h1>
                }