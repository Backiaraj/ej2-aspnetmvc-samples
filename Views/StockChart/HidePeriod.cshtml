@using Syncfusion.EJ2;
<script src="~/Scripts/StockChartData/aapl.js"></script>
@section ControlsSection{
    <style>

        #container {
            display: block;
        }

        #container_stock_border {
            pointer-events: none;
        }
    </style>
    <div class="control-section">
        <div>
            @(Html.EJS().StockChart("container").Load("load").EnablePeriodSelector(false)
                                                                              .Series(sr =>
                                                                              {
                                                                                  sr.Type(Syncfusion.EJ2.Charts.ChartSeriesType.Area).DataSource("data").XName("x").YName("open").Fill("url(#gradient-chart)").Opacity(0.5).Add();
                                                                              })
                                                                              .Render())
        </div>
    </div>
    <style>
        #control-container {
            padding: 0px !important;
        }

        #material-gradient-chart stop {
            stop-color: #00bdae;
        }

        #fabric-gradient-chart stop {
            stop-color: #4472c4;
        }

        #bootstrap-gradient-chart stop {
            stop-color: #a16ee5;
        }

        #material-dark-gradient-chart stop {
            stop-color: #00bdae;
        }

        #fabric-dark-gradient-chart stop {
            stop-color: #4472c4;
        }

        #bootstrap-dark-gradient-chart stop {
            stop-color: #a16ee5;
        }

        #tailwind-dark-gradient-chart stop {
            stop-color: #8B5CF6;
        }

        #bootstrap4-gradient-chart stop {
            stop-color: #a16ee5;
        }

        #highcontrast-gradient-chart stop {
            stop-color: #79ECE4;
        }

        #tailwind-gradient-chart stop {
            stop-color: #4f46e5;
        }

        #bootstrap5-gradient-chart stop {
            stop-color: #262E0B;
        }

        #bootstrap5-dark-gradient-chart stop {
            stop-color: #5ECB9B;
        }

        .chart-gradient stop[offset="0"] {
            stop-opacity: 0.9;
        }

        .chart-gradient stop[offset="1"] {
            stop-opacity: 0.3;
        }
    </style>
    <svg style="height: 0">
        <defs>
            <linearGradient id="material-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
                <stop offset="0"></stop>
                <stop offset="1"></stop>
            </linearGradient>
            <linearGradient id="fabric-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
                <stop offset="0"></stop>
                <stop offset="1"></stop>
            </linearGradient>
            <linearGradient id="bootstrap-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
                <stop offset="0"></stop>
                <stop offset="1"></stop>
            </linearGradient>
            <linearGradient id="bootstrap4-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
                <stop offset="0"></stop>
                <stop offset="1"></stop>
            </linearGradient>
            <linearGradient id="highcontrast-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
                <stop offset="0"></stop>
                <stop offset="1"></stop>
            </linearGradient>
            <linearGradient id="tailwind-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
                <stop offset="0"></stop>
                <stop offset="1"></stop>
            </linearGradient>
            <linearGradient id="material-dark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
                <stop offset="0"></stop>
                <stop offset="1"></stop>
            </linearGradient>
            <linearGradient id="fabric-dark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
                <stop offset="0"></stop>
                <stop offset="1"></stop>
            </linearGradient>
            <linearGradient id="bootstrap-dark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
                <stop offset="0"></stop>
                <stop offset="1"></stop>
            </linearGradient>
            <linearGradient id="tailwind-dark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
                <stop offset="0"></stop>
                <stop offset="1"></stop>
            </linearGradient>
            <linearGradient id="bootstrap5-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
                <stop offset="0"></stop>
                <stop offset="1"></stop>
            </linearGradient>
            <linearGradient id="bootstrap5-dark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
                <stop offset="0"></stop>
                <stop offset="1"></stop>
            </linearGradient>
        </defs>
    </svg>
    <script>var data = window.aapl;
        var load = function (args) {
            args.stockChart.chartArea = { border: { width: 0 } };
            args.stockChart.border = { width: 1 };
            args.stockChart.tooltip.enable = true;
            args.stockChart.crosshair.enable = true;
            args.stockChart.seriesType = [];
            args.stockChart.primaryXAxis = {
                valueType: 'DateTime', majorGridLines: { width: 0 },
                crosshairTooltip: { enable: true }
            };
            args.stockChart.primaryYAxis = {
                lineStyle: { color: 'transparent' },
                crosshairTooltip: { enable: false },
                majorTickLines: { color: 'transparent', width: 0 }
            };
            var selectedTheme = themeName ? themeName : 'Material';
            args.stockChart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast');
            args.stockChart.series[0].fill = 'url(#' + selectedTheme.toLowerCase() + '-gradient-chart)';
        }</script>
}
@section Meta{
                    <meta name="description" content="This example demonstrates the Hide Period Selector in ASP.NET MVC Stock Chart control. Explore here for more details."/>
                }
@section ActionDescription{
    <p>
        This sample renders the stock chart without period selector, data's can be navigated through range selector.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the Stock chart.
        <code>AreaSeries</code> is used to represent selected data value.
    </p>
}

@section Title{
                    <title>ASP.NET MVC Stock Chart Hide Period Selector Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Hide Period Selector in ASP.NET MVC Stock Chart Control</h1>
                }