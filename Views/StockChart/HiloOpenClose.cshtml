@using Syncfusion.EJ2;
<script src="~/Scripts/StockChartData/googl.js"></script>
@section ControlsSection{
    <div class="control-section">
        @(Html.EJS().StockChart("container").Load("load").Title("AAPL Stock Price").TooltipRender("tooltipRender")
        .PrimaryXAxis(xaxis =>xaxis.MajorGridLines(mg=>mg.Width(0)
        ).ValueType(Syncfusion.EJ2.Charts.ValueType.DateTime).CrosshairTooltip(ct=>ct.Enable(true)))
        .PrimaryYAxis(yaxis =>yaxis.MajorTickLines(mt=>mt.Color("transparent")
        ).LineStyle(ls=>ls.Color("transparent")).RangePadding(Syncfusion.EJ2.Charts.ChartRangePadding.None).LabelFormat("n0"))
        .Series(sr =>
        {
            sr.Name("google").Type(Syncfusion.EJ2.Charts.ChartSeriesType.HiloOpenClose).BearFillColor("#2ecd71").BullFillColor("#e74c3d").DataSource("data").XName("x").High("high").Low("low").Open("open").Close("close").Add();
        })
        .Crosshair(cr=>cr.Enable(true))
        .Tooltip(tp => tp.Enable(true).Shared(true))
        .ChartArea(area => area.Border(br=>br.Width(0)))
        .Border(br => br.Width(0))
        .Render())
    </div>
     @*custom code start*@
    <style>
        #control-container {
            padding: 0px !important;
        }
        #container {
            display: block;
        }

        #container_stock_border {
            pointer-events: none;
        }
    </style>
     @*custom code end*@
    <script>
        var data = window.googl;
        var load = function (args) {
             @*custom code start*@
            var selectedTheme = themeName ? themeName : 'Material';
            args.stockChart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast');
             @*custom code end*@
        }
        function tooltipRender(args) {
            if (args.text.split('<br/>')[4]) {
                var target = parseFloat(args.text.split('<br/>')[4].split('<b>')[1].split('</b>')[0]);
                var value = (target / 100000000).toFixed(1) + 'B';
                args.text = args.text.replace(args.text.split('<br/>')[4].split('<b>')[1].split('</b>')[0], value);
            }
        };
    </script>
}
 @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the OHLC in ASP.NET MVC Stock Chart control. Explore here for more details."/>
                }
 @*custom code end*@
@section ActionDescription{
    <p>
        This sample visualizes stock chart with OHLC series.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the Stock chart.
        <code>HILO Open Close series</code> is used to represent selected data value.
    </p>
}



@section Title{
                    <title>ASP.NET MVC Stock Chart OHLC Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of OHLC in ASP.NET MVC Stock Chart Control</h1>
                }