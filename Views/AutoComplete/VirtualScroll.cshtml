@using Syncfusion.EJ2
@model EJ2MVCSampleBrowser.Controllers.AutoCompleteRecord
@section ControlsSection{
    <div class="col-lg-12 control-section" style="height: 400px;">
        <div class='control-wrapper'>
            <div style='padding-top:70px;'>
                @Html.EJS().AutoComplete("datas").Placeholder("e.g Item 1").PopupHeight("200px").DataSource(@Model.RecordList).EnableVirtualization(true).Fields(new Syncfusion.EJ2.DropDowns.AutoCompleteFieldSettings { Value = "Text" }).Render()
            </div>
        </div>
    </div>
        @*custom code start*@
        <style>
            .control-wrapper {
                margin: 0 auto;
                width: 250px;
            }
        </style>
        @*custom code end*@
}
@section Meta{
    <meta name="description" content="This example demonstrates the Virtualization in ASP.NET MVC AutoComplete control. Explore here for more details." />
}
@section ActionDescription{
    <div id="action-description">
        <p>This example demonstrates the virtualization support of the AutoComplete in ASP.NET MVC application. The component has 150 items bound to it; however, when you open the suggestion list, only few items are loaded based on the popup height, and the remaining items are loaded while scrolling.</p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            The <code>AutoComplete</code> component supports virtualization, which improves UI performance for large amounts of
            data. To enable virtualization, set the <code>enableVirtualization</code> property to true. When virtualization is
            enabled, AutoComplete doesn't render the entire suggestion data source on initial component rendering. It loads the
            N number of items in the popup on initial rendering and the remaining set number of items will load while scrolling.
            Virtualization works with both local and remote data.
        </p>
    </div>
}
@section Title{
    <title>ASP.NET MVC AutoComplete Virtualization Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Virtualization in ASP.NET MVC AutoComplete Control</h1>
}
