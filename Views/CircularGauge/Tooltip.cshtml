@using Syncfusion.EJ2
@using Syncfusion.EJ2.CircularGauge
@section ControlsSection{

    <style>
        #templateWrap img {
            border-radius: 30px;
            width: 30px;
            height: 30px;
            margin: 0 auto;
        }
        #templateWrap {
            background: #fff;
            padding: 3px;
            border-radius: 2px;
        }
        #templateWrap .des {
            float: right;
            padding-left: 10px;
            line-height: 30px;
        }
    </style>
    
    <div class="control-section" style="margin-left:120px">
        @Html.EJS().CircularGauge("container").Load("gaugeLoad").EnablePointerDrag(true).TooltipRender("tooltipRender").DragEnd("dragEnd").Width("80%").Title("Tooltip Customization").Tooltip(new CircularGaugeTooltipSettings{Enable=true, EnableAnimation=false, Type=new string[] { "Range", "Pointer" } }).TitleStyle(
     new CircularGaugeFont{ Size="15px", Color="grey", Opacity = 1 }).Axes(axes =>
   axes.EndAngle(120).StartAngle(240).LineStyle(new CircularGaugeLine{ Width = 0, Color = "transparent" }).Radius("90%")
.Minimum(0).Maximum(120).MajorTicks(new CircularGaugeTick{ Color="white", Offset=-5, Height=12 }).MinorTicks(new CircularGaugeTick{ Width=0, Color="transparent" })
.LabelStyle(new CircularGaugeLabel{ UseRangeColor = true , Font = new CircularGaugeFont { Size="13px", FontFamily="Roboto", Opacity = 1 }
}).Ranges(
    new List<Syncfusion.EJ2.CircularGauge.CircularGaugeRange> {
           new Syncfusion.EJ2.CircularGauge.CircularGaugeRange{
              Start = 0, End = 50 ,StartWidth ="10", EndWidth ="10",Radius = "102%",Color="#3A5DC8"
           },
            new Syncfusion.EJ2.CircularGauge.CircularGaugeRange{
              Start = 50, End = 120 ,StartWidth ="10", EndWidth ="10",Radius = "102%",Color="#33BCBD"
           }
    })
  .Pointers(
    new List<Syncfusion.EJ2.CircularGauge.CircularGaugePointer> {
           new Syncfusion.EJ2.CircularGauge.CircularGaugePointer
           {
               Value = 70,Radius = "60%" , MarkerHeight = 20 ,Color="#33BCBD",
               Cap = new CircularGaugeCap{ Radius=10, Border =new  CircularGaugeBorder{ Color="#33BCBD", Width=5 } },
               Animation = new CircularGaugeAnimation{ Enable=true, Duration=1500 }
           }
    }).Add()
).Render()
    </div>
    <script type="text/javascript">
        var gauge;
        function gaugeLoad(args) {
            var selectedTheme = themeName ? themeName : 'Material';
            args.gauge.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, "Dark").replace(/contrast/i, 'Contrast');
            gauge = args.gauge;
        }
        function tooltipRender(args) {
		var imageName, borderColor, textColor;
            if (args.pointer) {
                imageName = ((args.pointer.currentValue >= 0 && args.pointer.currentValue <= 50) ? 'range1' : 'range3');
                borderColor = ((args.pointer.currentValue >= 0 && args.pointer.currentValue <= 50) ? '#3A5DC8' : '#33BCBD');
                textColor = gauge.theme.toLowerCase() === 'highcontrast' ? 'White' : borderColor;
                if (gauge.theme.toLowerCase() === 'highcontrast') {
                    args.tooltip.template = '<div id="templateWrap" style="border:2px solid ' + borderColor +
                        ';background-color:black"><img src="../Content/CircularGauge/Images/' + imageName + '.png"/><div class="des" style="color: ' +
                        textColor + '"><span>${value} MPH</span></div></div>';
                } else {
                     args.tooltip.template = '<div id="templateWrap" style="border:2px solid ' + borderColor +
                        '"><img src="../Content/CircularGauge/Images/' + imageName + '.png"/><div class="des" style="color: ' +
                        borderColor + '"><span>${value} MPH</span></div></div>';
                }
               
            } else if (args.range) {
				imageName = ((args.range.start >= 0 && args.range.end <= 50)) ? 'range1' : 'range3';
				borderColor = ((args.range.start >= 0 && args.range.end <= 50)) ? '#3A5DC8' : '#33BCBD';
				textColor = gauge.theme.toLowerCase() === 'highcontrast' ? 'White' : borderColor;
				var start = args.range.start;
                var end = args.range.end;
                if (gauge.theme.toLowerCase() === 'highcontrast') {
                    args.tooltip.rangeSettings.template = '<div id=templateWrap style="padding:5px;border:2px solid' + borderColor + ';color: ' +
                        textColor + ';background-color:black"><img src="../Content/CircularGauge/Images/' + imageName +
                        '.png"/> <span>' + start + ' - ' + end + ' MPH  </span> </div>';
                } else {
                    args.tooltip.rangeSettings.template = '<div id=templateWrap style="padding:5px;border:2px solid' + borderColor + ';color: ' +
				    borderColor + '"><img src="../Content/CircularGauge/Images/' + imageName +
				    '.png"/> <span>' + start + ' - ' + end + ' MPH  </span> </div>';
                }
				
			}   
        }
		function dragEnd(args) {
		if (args.currentValue >= 0 && args.currentValue <= 50) {
            args.pointer.color = "#3A5DC8";
            args.pointer.cap.border.color = "#3A5DC8";
        } else {
            args.pointer.color = "#33BCBD";
            args.pointer.cap.border.color = "#33BCBD";
        }
		args.pointer.value = args.currentValue;
        args.pointer.animation.enable = false;
        gauge.refresh();
		}
    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample visualizes the tooltip of pointer value and ranges in gauge. To see the tooltip in action, hover pointer or tap the pointer.
        </p>
    </div>
}
@section Meta{
                    <meta name="description" content="This example demonstrates the Tooltip in ASP.NET MVC Circular Gauge control. Explore here for more details."/>
                }
@section Description{
    <div id="description">
        <p>
            In this example, you can see how to show the tooltip for pointer and ranges in gauge, to see the tooltip in action, hover pointer or range bar or tap on pointer or range bar in touch enabled devices
        </p>
        <br>       
        <p>
            More information on the tooltip can be found in this
            <a target="_blank" href="http://ej2.syncfusion.com/documentation">documentation section</a>.
        </p>
    </div>
}

@section Title{
                    <title>ASP.NET MVC Circular Gauge Tooltip Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Tooltip in ASP.NET MVC Circular Gauge Control</h1>
                }