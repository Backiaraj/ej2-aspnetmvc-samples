@using Syncfusion.EJ2
@{
    ViewBag.Title = "OrganizePages";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    string serviceUrl = VirtualPathUtility.ToAbsolute("~/api/PdfViewer/");
}

@section ControlsSection{
    <div class="control-section">
        <div class="flex-container">
            <label class="switchLabel" for="checked">Standalone PDF Viewer</label>
            <div class="e-message render-mode-info">
                <span class="e-msg-icon render-mode-info-icon" title="Turn OFF to render the PDF Viewer as server-backed"></span>
            </div>
            <div>
                @Html.EJS().Switch("checked").Checked(true).Change("change").CssClass("buttonSwitch").Render()
            </div>
        </div>
        @Html.EJS().PdfViewer("pdfviewer").DocumentPath("https://cdn.syncfusion.com/content/pdf/pdf-succinctly.pdf").ResourceUrl("https://cdn.syncfusion.com/ej2/23.2.6/dist/ej2-pdfviewer-lib").DocumentLoad("documentLoad").Render()
    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Default Functionalities in ASP.NET MVC PDF Viewer control. Explore here for more details."/>
                }
@section ActionDescription{
    <div id="action-description">
        <p>This sample showcases the page organization features of the PDF Viewer component, allowing users to effortlessly insert, delete, and rotate pages. Additionally, users can select all pages for collective adjustments and save changes instantly or download the edited document.</p>
    </div>
}
@section Description{
	<div id="action-description">	
    <p>
        Explore the comprehensive page organization capabilities of the PDF Viewer component through this sample. Users can seamlessly manage the PDF documents with the following functionalities:
    </p>
    <ul>
        <li>Add new pages to the document to integrate additional content seamlessly.</li>
        <li>Remove unnecessary pages with ease, streamlining document management.</li>
        <li>Resolve orientation issues by rotating pages clockwise <code>right</code>  or counterclockwise <code>left</code> as required.</li>
        <li>Conveniently select all pages for uniform adjustments and modifications.</li>
        <li>Enjoy real-time updates as any changes made to the page organization are instantly reflected within the PDF Viewer, when you click on the <code>Save</code> button.</li>
        <li>Utilize the <code>Save As</code> feature to preserve edits, enabling users to download the modified version of the PDF document for future reference.</li> 
    </ul> 
    <div id="description">
        <p>
        More information on the PDF Viewer instantiation can be found in this
        <a target="_blank" 
        href="https://ej2.syncfusion.com/aspnetmvc/documentation/pdfviewer/getting-started/">
        documentation section</a>.
    </p>
        
    </div>
}
@*custom code start*@
<style>

#pdfviewer {
    display: block;
    height: 641px;
}

.flex-container {
    display: flex;
    justify-content: flex-end;
}

.render-mode-info {
    background: none;
    border: none;
    padding-left: 0px;
}

.render-mode-info .render-mode-info-icon {
    height: 16px;
    width: 16px;
}

.switchLabel {
    font-family: "Segoe UI", "GeezaPro", "DejaVu Serif", sans-serif;        
    font-weight: 400;
    line-height: 20px;
    letter-spacing: 0.24px;
    text-align: right;
    font-size: 14px;
}

.render-mode-info .render-mode-info-icon::before {
    line-height: 0.5rem;
}

.buttonSwitch {
    Width: 40px;
    Height: 24px;
}
</style>
<script>
    var isInitialLoading = true;
    function documentLoad() {
        var viewer = document.getElementById('pdfviewer').ej2_instances[0];
        if (isInitialLoading) {
            viewer.isPageOrganizerOpen = true;
            isInitialLoading = false;
        } else {
            viewer.isPageOrganizerOpen = false;
        }
    }

    function change(args) {
        var viewer = document.getElementById('pdfviewer').ej2_instances[0];
        if (args.checked) {
            viewer.serviceUrl = '';
        } else {
            viewer.serviceUrl = '@serviceUrl';
        }
        viewer.dataBind();
        viewer.load(viewer.documentPath, null);
    }
</script>
@*custom code end*@
@section Title{
                    <title>ASP.NET MVC PDF Viewer Default Functionalities Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Default Functionalities in ASP.NET MVC PDF Viewer Control</h1>
                }
                